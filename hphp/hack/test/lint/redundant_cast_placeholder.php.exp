File "redundant_cast_placeholder.php", line 18, characters 3-17:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 19, characters 3-17:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 20, characters 3-21:
This `as` assertion will always succeed and hence is redundant. The expression on the left has a type `C<nothing, nothing, mixed>` which is a subtype of `C<nothing, nothing, nothing>`. (Lint[5628])
File "redundant_cast_placeholder.php", line 20, characters 3-21:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 21, characters 3-21:
This `as` assertion will always succeed and hence is redundant. The expression on the left has a type `D<nothing, mixed>` which is a subtype of `C<nothing, int, nothing>`. (Lint[5628])
File "redundant_cast_placeholder.php", line 21, characters 3-21:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 22, characters 3-21:
This `as` assertion will always succeed and hence is redundant. The expression on the left has a type `E` which is a subtype of `C<bool, int, nothing>`. (Lint[5628])
File "redundant_cast_placeholder.php", line 22, characters 3-21:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 23, characters 3-16:
This `as` assertion will always succeed and hence is redundant. The expression on the left has a type `E` which is a subtype of `C<bool, int, nothing>`. (Lint[5628])
File "redundant_cast_placeholder.php", line 23, characters 3-16:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 24, characters 3-15:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 33, characters 3-19:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 34, characters 3-23:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 35, characters 3-14:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 36, characters 3-19:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 37, characters 3-14:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
File "redundant_cast_placeholder.php", line 38, characters 3-19:
This expression has a type lie that makes Hack type checker think it is a different type than what it inferred. It is achieved using a type assertion through `as`. This can lead to fatals or subtle and latent behaviour changes. Even if the code is correct at the moment, the type checker won't produce any signal when the prerequisites for correctness change. (Lint[5808])
