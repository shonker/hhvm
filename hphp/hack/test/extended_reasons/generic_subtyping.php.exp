error: Typing[4110] Invalid argument

Expected `B`

10 | function rcvr_concrete(»B« $x): void {}
11 | 
12 | function call_concrete_with_implicit_upper_bound<T>(T $x): void {
13 |   rcvr_concrete($x);
14 | }

File "generic_subtyping.php", line 10, character 24 - line 10, character 24:

But got `mixed` arising from an implicit `as mixed` constraint on this type

 10 | function rcvr_concrete(B $x): void {}
 11 | 
 12 | function call_concrete_with_implicit_upper_bound<T>(»T« $x): void {
 13 |   rcvr_concrete($x);
 14 | }

File "generic_subtyping.php", line 12, character 53 - line 12, character 53:

Here's why: the implicit upper bound (`mixed`) on the generic parameter

 10 | function rcvr_concrete(B $x): void {}
 11 | 
 12 | function call_concrete_with_implicit_upper_bound<T>(»T« $x): void {
 13 |   rcvr_concrete($x);
 14 | }

File "generic_subtyping.php", line 12, character 53 - line 12, character 53:

flows *into* this hint

 10 | function rcvr_concrete(B $x): void {}
 11 | 
 12 | function call_concrete_with_implicit_upper_bound<T>(»T« $x): void {
 13 |   rcvr_concrete($x);
 14 | }

File "generic_subtyping.php", line 12, character 53 - line 12, character 53:

which itself flows *into* this expression

 10 | function rcvr_concrete(B $x): void {}
 11 | 
 12 | function call_concrete_with_implicit_upper_bound<T>(T »$x«): void {
 13 |   rcvr_concrete($x);
 14 | }

File "generic_subtyping.php", line 12, character 55 - line 12, character 56:

which itself flows *into* this expression

 10 | function rcvr_concrete(B $x): void {}
 11 | 
 12 | function call_concrete_with_implicit_upper_bound<T>(T $x): void {
 13 |   rcvr_concrete(»$x«);
 14 | }

File "generic_subtyping.php", line 13, character 17 - line 13, character 18:

which itself flows *into* this expression, via the (contravariant) 1st function parameter

 10 | function rcvr_concrete(B $x): void {}
 11 | 
 12 | function call_concrete_with_implicit_upper_bound<T>(T $x): void {
 13 |   »rcvr_concrete«($x);
 14 | }

File "generic_subtyping.php", line 13, character 3 - line 13, character 15:

which itself flows *from* this declaration

10 | function »rcvr_concrete«(B $x): void {}
11 | 
12 | function call_concrete_with_implicit_upper_bound<T>(T $x): void {
13 |   rcvr_concrete($x);
14 | }

File "generic_subtyping.php", line 10, character 10 - line 10, character 22:

which itself flows *into* this hint, via the (contravariant) 1st function parameter

10 | function rcvr_concrete(»B« $x): void {}
11 | 
12 | function call_concrete_with_implicit_upper_bound<T>(T $x): void {
13 |   rcvr_concrete($x);
14 | }

File "generic_subtyping.php", line 10, character 24 - line 10, character 24:

error: Typing[4110] Invalid argument

Expected `B`

10 | function rcvr_concrete(»B« $x): void {}
11 | 
12 | function call_concrete_with_implicit_upper_bound<T>(T $x): void {

File "generic_subtyping.php", line 10, character 24 - line 10, character 24:

But got `A`

 16 | function call_conrete_with_upper_bound<T as »A«>(T $x): void {
 17 |   rcvr_concrete($x);
 18 | }

File "generic_subtyping.php", line 16, character 45 - line 16, character 45:

Here's why: this hint

 16 | function call_conrete_with_upper_bound<T as »A«>(T $x): void {
 17 |   rcvr_concrete($x);
 18 | }

File "generic_subtyping.php", line 16, character 45 - line 16, character 45:

flows *into* this hint

 16 | function call_conrete_with_upper_bound<T as A>(»T« $x): void {
 17 |   rcvr_concrete($x);
 18 | }

File "generic_subtyping.php", line 16, character 48 - line 16, character 48:

which itself flows *into* this expression

 16 | function call_conrete_with_upper_bound<T as A>(T »$x«): void {
 17 |   rcvr_concrete($x);
 18 | }

File "generic_subtyping.php", line 16, character 50 - line 16, character 51:

which itself flows *into* this expression

 16 | function call_conrete_with_upper_bound<T as A>(T $x): void {
 17 |   rcvr_concrete(»$x«);
 18 | }

File "generic_subtyping.php", line 17, character 17 - line 17, character 18:

which itself flows *into* this expression, via the (contravariant) 1st function parameter

 16 | function call_conrete_with_upper_bound<T as A>(T $x): void {
 17 |   »rcvr_concrete«($x);
 18 | }

File "generic_subtyping.php", line 17, character 3 - line 17, character 15:

which itself flows *from* this declaration

10 | function »rcvr_concrete«(B $x): void {}
11 | 
12 | function call_concrete_with_implicit_upper_bound<T>(T $x): void {

File "generic_subtyping.php", line 10, character 10 - line 10, character 22:

which itself flows *into* this hint, via the (contravariant) 1st function parameter

10 | function rcvr_concrete(»B« $x): void {}
11 | 
12 | function call_concrete_with_implicit_upper_bound<T>(T $x): void {

File "generic_subtyping.php", line 10, character 24 - line 10, character 24:

error: Typing[4323] Invalid argument

`T` is a constrained type parameter

 20 | function rcvr_upper_bound<»T« as B>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {
 23 |   rcvr_upper_bound($x);
 24 | }

File "generic_subtyping.php", line 20, character 27 - line 20, character 27:

This type constraint is violated

 20 | function rcvr_upper_bound<T as »B«>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {
 23 |   rcvr_upper_bound($x);
 24 | }

File "generic_subtyping.php", line 20, character 32 - line 20, character 32:

Expected `B`

 20 | function rcvr_upper_bound<T as »B«>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {
 23 |   rcvr_upper_bound($x);
 24 | }

File "generic_subtyping.php", line 20, character 32 - line 20, character 32:

But got `A`

 20 | function rcvr_upper_bound<T as B>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(»A« $x): void {
 23 |   rcvr_upper_bound($x);
 24 | }

File "generic_subtyping.php", line 22, character 40 - line 22, character 40:

Here's why: this hint

 20 | function rcvr_upper_bound<T as B>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(»A« $x): void {
 23 |   rcvr_upper_bound($x);
 24 | }

File "generic_subtyping.php", line 22, character 40 - line 22, character 40:

flows *into* this expression

 20 | function rcvr_upper_bound<T as B>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A »$x«): void {
 23 |   rcvr_upper_bound($x);
 24 | }

File "generic_subtyping.php", line 22, character 42 - line 22, character 43:

which itself flows *into* this expression

 20 | function rcvr_upper_bound<T as B>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {
 23 |   rcvr_upper_bound(»$x«);
 24 | }

File "generic_subtyping.php", line 23, character 20 - line 23, character 21:

which itself flows *into* this expression, via the (contravariant) 1st function parameter

 20 | function rcvr_upper_bound<T as B>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {
 23 |   »rcvr_upper_bound«($x);
 24 | }

File "generic_subtyping.php", line 23, character 3 - line 23, character 18:

which itself flows *from* this declaration

 20 | function »rcvr_upper_bound«<T as B>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {
 23 |   rcvr_upper_bound($x);
 24 | }

File "generic_subtyping.php", line 20, character 10 - line 20, character 25:

which itself flows *into* the constraint on the generic parameter, via the (contravariant) 1st function parameter

 20 | function rcvr_upper_bound<T as »B«>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {
 23 |   rcvr_upper_bound($x);
 24 | }

File "generic_subtyping.php", line 20, character 32 - line 20, character 32:

error: Typing[4323] Invalid argument

`T` is a constrained type parameter

 20 | function rcvr_upper_bound<»T« as B>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {

File "generic_subtyping.php", line 20, character 27 - line 20, character 27:

This type constraint is violated

 20 | function rcvr_upper_bound<T as »B«>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {

File "generic_subtyping.php", line 20, character 32 - line 20, character 32:

Expected `B`

 20 | function rcvr_upper_bound<T as »B«>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {

File "generic_subtyping.php", line 20, character 32 - line 20, character 32:

But got `A`

 26 | function call_upper_bound_with_upper_bound<T as »A«>(T $x): void {
 27 |   rcvr_upper_bound($x);
 28 | }

File "generic_subtyping.php", line 26, character 49 - line 26, character 49:

Here's why: this hint

 26 | function call_upper_bound_with_upper_bound<T as »A«>(T $x): void {
 27 |   rcvr_upper_bound($x);
 28 | }

File "generic_subtyping.php", line 26, character 49 - line 26, character 49:

flows *into* this hint

 26 | function call_upper_bound_with_upper_bound<T as A>(»T« $x): void {
 27 |   rcvr_upper_bound($x);
 28 | }

File "generic_subtyping.php", line 26, character 52 - line 26, character 52:

which itself flows *into* this expression

 26 | function call_upper_bound_with_upper_bound<T as A>(T »$x«): void {
 27 |   rcvr_upper_bound($x);
 28 | }

File "generic_subtyping.php", line 26, character 54 - line 26, character 55:

which itself flows *into* this expression

 26 | function call_upper_bound_with_upper_bound<T as A>(T $x): void {
 27 |   rcvr_upper_bound(»$x«);
 28 | }

File "generic_subtyping.php", line 27, character 20 - line 27, character 21:

which itself flows *into* this expression, via the (contravariant) 1st function parameter

 26 | function call_upper_bound_with_upper_bound<T as A>(T $x): void {
 27 |   »rcvr_upper_bound«($x);
 28 | }

File "generic_subtyping.php", line 27, character 3 - line 27, character 18:

which itself flows *from* this declaration

 20 | function »rcvr_upper_bound«<T as B>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {

File "generic_subtyping.php", line 20, character 10 - line 20, character 25:

which itself flows *into* the constraint on the generic parameter, via the (contravariant) 1st function parameter

 20 | function rcvr_upper_bound<T as »B«>(T $x): void {}
 21 | 
 22 | function call_upper_bound_with_conrete(A $x): void {

File "generic_subtyping.php", line 20, character 32 - line 20, character 32:

error: Typing[4323] Invalid argument

`T` is a constrained type parameter

 30 | function rcvr_both_bounds<»T« as D as B>(T $x): void {}
 31 | 
 32 | function call_both_bounds_with_upper_bound<T as A>(T $x): void {
 33 |   rcvr_both_bounds($x);
 34 | }

File "generic_subtyping.php", line 30, character 27 - line 30, character 27:

This type constraint is violated

 30 | function rcvr_both_bounds<T as »D« as B>(T $x): void {}
 31 | 
 32 | function call_both_bounds_with_upper_bound<T as A>(T $x): void {
 33 |   rcvr_both_bounds($x);
 34 | }

File "generic_subtyping.php", line 30, character 32 - line 30, character 32:

Expected `D`

 30 | function rcvr_both_bounds<T as »D« as B>(T $x): void {}
 31 | 
 32 | function call_both_bounds_with_upper_bound<T as A>(T $x): void {
 33 |   rcvr_both_bounds($x);
 34 | }

File "generic_subtyping.php", line 30, character 32 - line 30, character 32:

But got `A`

 30 | function rcvr_both_bounds<T as D as B>(T $x): void {}
 31 | 
 32 | function call_both_bounds_with_upper_bound<T as »A«>(T $x): void {
 33 |   rcvr_both_bounds($x);
 34 | }

File "generic_subtyping.php", line 32, character 49 - line 32, character 49:

Here's why: this hint

 30 | function rcvr_both_bounds<T as D as B>(T $x): void {}
 31 | 
 32 | function call_both_bounds_with_upper_bound<T as »A«>(T $x): void {
 33 |   rcvr_both_bounds($x);
 34 | }

File "generic_subtyping.php", line 32, character 49 - line 32, character 49:

flows *into* this hint

 30 | function rcvr_both_bounds<T as D as B>(T $x): void {}
 31 | 
 32 | function call_both_bounds_with_upper_bound<T as A>(»T« $x): void {
 33 |   rcvr_both_bounds($x);
 34 | }

File "generic_subtyping.php", line 32, character 52 - line 32, character 52:

which itself flows *into* this expression

 30 | function rcvr_both_bounds<T as D as B>(T $x): void {}
 31 | 
 32 | function call_both_bounds_with_upper_bound<T as A>(T »$x«): void {
 33 |   rcvr_both_bounds($x);
 34 | }

File "generic_subtyping.php", line 32, character 54 - line 32, character 55:

which itself flows *into* this expression

 30 | function rcvr_both_bounds<T as D as B>(T $x): void {}
 31 | 
 32 | function call_both_bounds_with_upper_bound<T as A>(T $x): void {
 33 |   rcvr_both_bounds(»$x«);
 34 | }

File "generic_subtyping.php", line 33, character 20 - line 33, character 21:

which itself flows *into* this expression, via the (contravariant) 1st function parameter

 30 | function rcvr_both_bounds<T as D as B>(T $x): void {}
 31 | 
 32 | function call_both_bounds_with_upper_bound<T as A>(T $x): void {
 33 |   »rcvr_both_bounds«($x);
 34 | }

File "generic_subtyping.php", line 33, character 3 - line 33, character 18:

which itself flows *from* this declaration

 30 | function »rcvr_both_bounds«<T as D as B>(T $x): void {}
 31 | 
 32 | function call_both_bounds_with_upper_bound<T as A>(T $x): void {
 33 |   rcvr_both_bounds($x);
 34 | }

File "generic_subtyping.php", line 30, character 10 - line 30, character 25:

which itself flows *into* the constraint on the generic parameter, via the (contravariant) 1st function parameter

 30 | function rcvr_both_bounds<T as »D« as B>(T $x): void {}
 31 | 
 32 | function call_both_bounds_with_upper_bound<T as A>(T $x): void {
 33 |   rcvr_both_bounds($x);
 34 | }

File "generic_subtyping.php", line 30, character 32 - line 30, character 32:

5 errors found.
