error: Typing[4110] Invalid return type

 12 |   }
 13 |   return »$z«;
 14 | }

File "refinment_is.php", line 13, character 10 - line 13, character 11:

Expected `C`

 7 | function inter_is(A $a, C $c): »C« {
 8 |   if($a is I) {
 9 |     $z = $a;

File "refinment_is.php", line 7, character 32 - line 7, character 32:

But got `A`

 7 | function inter_is(»A« $a, C $c): C {
 8 |   if($a is I) {
 9 |     $z = $a;

File "refinment_is.php", line 7, character 19 - line 7, character 19:

Here's why: this hint

 7 | function inter_is(»A« $a, C $c): C {
 8 |   if($a is I) {
 9 |     $z = $a;

File "refinment_is.php", line 7, character 19 - line 7, character 19:

flows *into* this expression

 7 | function inter_is(A »$a«, C $c): C {
 8 |   if($a is I) {
 9 |     $z = $a;

File "refinment_is.php", line 7, character 21 - line 7, character 22:

which itself flows *into* this expression

 7 | function inter_is(A $a, C $c): C {
 8 |   if(»$a« is I) {
 9 |     $z = $a;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 8, character 6 - line 8, character 7:

which itself flows *into* this `is` expression, via the intersection type

 7 | function inter_is(A $a, C $c): C {
 8 |   if(»$a is I«) {
 9 |     $z = $a;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 8, character 6 - line 8, character 12:

which itself flows *into* this expression

 7 | function inter_is(A $a, C $c): C {
 8 |   if($a is I) {
 9 |     $z = »$a«;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 9, character 10 - line 9, character 11:

which itself flows *into* this expression

 7 | function inter_is(A $a, C $c): C {
 8 |   if($a is I) {
 9 |     »$z« = $a;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 9, character 5 - line 9, character 6:

which itself flows *into* this expression, via the union type

  7 | function inter_is(A $a, C $c): C {
  8 |   »if($a is I) {
  9 |     $z = $a;
 10 |   } else {
 11 |     $z = $c;
 12 |   }«
 13 |   return $z;
 14 | }

File "refinment_is.php", line 8, character 3 - line 12, character 3:

which itself flows *into* this expression

 12 |   }
 13 |   return »$z«;
 14 | }

File "refinment_is.php", line 13, character 10 - line 13, character 11:

which itself flows *into* this expression

 12 |   }
 13 |   »return $z;«
 14 | }

File "refinment_is.php", line 13, character 3 - line 13, character 12:

which itself flows *into* this hint

 7 | function inter_is(A $a, C $c): »C« {
 8 |   if($a is I) {
 9 |     $z = $a;

File "refinment_is.php", line 7, character 32 - line 7, character 32:

Flow:
{
  "Rflow":[
    {
      "Rflow":[
        {
          "Rflow":[
            {
              "Rflow":[
                {
                  "Rhint":[{"filename":"refinment_is.php","line":7,"char_start":19,"char_end":19}]
                },
                {
                  "Rwitness":[{"filename":"refinment_is.php","line":7,"char_start":21,"char_end":22}]
                }
              ]
            },
            {
              "Rwitness":[{"filename":"refinment_is.php","line":8,"char_start":6,"char_end":7}]
            }
          ]
        },
        {
          "Rprj_asymm_left":[
            "Prj_asymm_inter",
            {
              "Rflow":[
                {
                  "Rflow":[
                    {
                      "Rflow":[
                        {
                          "Ris_refinement":[{"filename":"refinment_is.php","line":8,"char_start":6,"char_end":12}]
                        },
                        {
                          "Rwitness":[{"filename":"refinment_is.php","line":9,"char_start":10,"char_end":11}]
                        }
                      ]
                    },
                    {
                      "Rwitness":[{"filename":"refinment_is.php","line":9,"char_start":5,"char_end":6}]
                    }
                  ]
                },
                {
                  "Rprj_asymm_left":[
                    "Prj_asymm_union",
                    {
                      "Rflow":[
                        {
                          "Rflow":[
                            {
                              "Rwitness":[{"filename":"refinment_is.php","line":8,"char_start":3,"char_end":56}]
                            },
                            {
                              "Rwitness":[{"filename":"refinment_is.php","line":13,"char_start":10,"char_end":11}]
                            }
                          ]
                        },
                        {
                          "Rwitness":[{"filename":"refinment_is.php","line":13,"char_start":3,"char_end":12}]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "Rhint":[{"filename":"refinment_is.php","line":7,"char_start":32,"char_end":32}]
    }
  ]
}


File "", line 0, character 0 - line 0, character -1:

error: Typing[4110] Invalid return type

 12 |   }
 13 |   return »$z«;
 14 | }

File "refinment_is.php", line 13, character 10 - line 13, character 11:

Expected `C`

 7 | function inter_is(A $a, C $c): »C« {
 8 |   if($a is I) {
 9 |     $z = $a;

File "refinment_is.php", line 7, character 32 - line 7, character 32:

But got `(A & I)` from this `is` expression test

 7 | function inter_is(A $a, C $c): C {
 8 |   if(»$a is I«) {
 9 |     $z = $a;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 8, character 6 - line 8, character 12:

Here's why: this `is` expression

 7 | function inter_is(A $a, C $c): C {
 8 |   if(»$a is I«) {
 9 |     $z = $a;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 8, character 6 - line 8, character 12:

flows *into* this expression

 7 | function inter_is(A $a, C $c): C {
 8 |   if($a is I) {
 9 |     $z = »$a«;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 9, character 10 - line 9, character 11:

which itself flows *into* this expression

 7 | function inter_is(A $a, C $c): C {
 8 |   if($a is I) {
 9 |     »$z« = $a;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 9, character 5 - line 9, character 6:

which itself flows *into* this expression, via the union type

  7 | function inter_is(A $a, C $c): C {
  8 |   »if($a is I) {
  9 |     $z = $a;
 10 |   } else {
 11 |     $z = $c;
 12 |   }«
 13 |   return $z;
 14 | }

File "refinment_is.php", line 8, character 3 - line 12, character 3:

which itself flows *into* this expression

 12 |   }
 13 |   return »$z«;
 14 | }

File "refinment_is.php", line 13, character 10 - line 13, character 11:

which itself flows *into* this expression

 12 |   }
 13 |   »return $z;«
 14 | }

File "refinment_is.php", line 13, character 3 - line 13, character 12:

which itself flows *into* this hint

 7 | function inter_is(A $a, C $c): »C« {
 8 |   if($a is I) {
 9 |     $z = $a;

File "refinment_is.php", line 7, character 32 - line 7, character 32:

Flow:
{
  "Rflow":[
    {
      "Rflow":[
        {
          "Rflow":[
            {
              "Rflow":[
                {
                  "Ris_refinement":[{"filename":"refinment_is.php","line":8,"char_start":6,"char_end":12}]
                },
                {
                  "Rwitness":[{"filename":"refinment_is.php","line":9,"char_start":10,"char_end":11}]
                }
              ]
            },
            {
              "Rwitness":[{"filename":"refinment_is.php","line":9,"char_start":5,"char_end":6}]
            }
          ]
        },
        {
          "Rprj_asymm_left":[
            "Prj_asymm_union",
            {
              "Rflow":[
                {
                  "Rflow":[
                    {
                      "Rwitness":[{"filename":"refinment_is.php","line":8,"char_start":3,"char_end":56}]
                    },
                    {
                      "Rwitness":[{"filename":"refinment_is.php","line":13,"char_start":10,"char_end":11}]
                    }
                  ]
                },
                {
                  "Rwitness":[{"filename":"refinment_is.php","line":13,"char_start":3,"char_end":12}]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "Rhint":[{"filename":"refinment_is.php","line":7,"char_start":32,"char_end":32}]
    }
  ]
}


File "", line 0, character 0 - line 0, character -1:

error: Typing[4110] Invalid return type

 12 |   }
 13 |   return »$z«;
 14 | }

File "refinment_is.php", line 13, character 10 - line 13, character 11:

Expected `C`

 7 | function inter_is(A $a, C $c): »C« {
 8 |   if($a is I) {
 9 |     $z = $a;

File "refinment_is.php", line 7, character 32 - line 7, character 32:

But got `I`

 7 | function inter_is(A $a, C $c): C {
 8 |   if($a is »I«) {
 9 |     $z = $a;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 8, character 12 - line 8, character 12:

Here's why: this hint

 7 | function inter_is(A $a, C $c): C {
 8 |   if($a is »I«) {
 9 |     $z = $a;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 8, character 12 - line 8, character 12:

flows *into* this `is` expression, via the intersection type

 7 | function inter_is(A $a, C $c): C {
 8 |   if(»$a is I«) {
 9 |     $z = $a;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 8, character 6 - line 8, character 12:

which itself flows *into* this expression

 7 | function inter_is(A $a, C $c): C {
 8 |   if($a is I) {
 9 |     $z = »$a«;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 9, character 10 - line 9, character 11:

which itself flows *into* this expression

 7 | function inter_is(A $a, C $c): C {
 8 |   if($a is I) {
 9 |     »$z« = $a;
10 |   } else {
11 |     $z = $c;
12 |   }
13 |   return $z;
14 | }

File "refinment_is.php", line 9, character 5 - line 9, character 6:

which itself flows *into* this expression, via the union type

  7 | function inter_is(A $a, C $c): C {
  8 |   »if($a is I) {
  9 |     $z = $a;
 10 |   } else {
 11 |     $z = $c;
 12 |   }«
 13 |   return $z;
 14 | }

File "refinment_is.php", line 8, character 3 - line 12, character 3:

which itself flows *into* this expression

 12 |   }
 13 |   return »$z«;
 14 | }

File "refinment_is.php", line 13, character 10 - line 13, character 11:

which itself flows *into* this expression

 12 |   }
 13 |   »return $z;«
 14 | }

File "refinment_is.php", line 13, character 3 - line 13, character 12:

which itself flows *into* this hint

 7 | function inter_is(A $a, C $c): »C« {
 8 |   if($a is I) {
 9 |     $z = $a;

File "refinment_is.php", line 7, character 32 - line 7, character 32:

Flow:
{
  "Rflow":[
    {
      "Rflow":[
        {
          "Rhint":[{"filename":"refinment_is.php","line":8,"char_start":12,"char_end":12}]
        },
        {
          "Rprj_asymm_left":[
            "Prj_asymm_inter",
            {
              "Rflow":[
                {
                  "Rflow":[
                    {
                      "Rflow":[
                        {
                          "Ris_refinement":[{"filename":"refinment_is.php","line":8,"char_start":6,"char_end":12}]
                        },
                        {
                          "Rwitness":[{"filename":"refinment_is.php","line":9,"char_start":10,"char_end":11}]
                        }
                      ]
                    },
                    {
                      "Rwitness":[{"filename":"refinment_is.php","line":9,"char_start":5,"char_end":6}]
                    }
                  ]
                },
                {
                  "Rprj_asymm_left":[
                    "Prj_asymm_union",
                    {
                      "Rflow":[
                        {
                          "Rflow":[
                            {
                              "Rwitness":[{"filename":"refinment_is.php","line":8,"char_start":3,"char_end":56}]
                            },
                            {
                              "Rwitness":[{"filename":"refinment_is.php","line":13,"char_start":10,"char_end":11}]
                            }
                          ]
                        },
                        {
                          "Rwitness":[{"filename":"refinment_is.php","line":13,"char_start":3,"char_end":12}]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "Rhint":[{"filename":"refinment_is.php","line":7,"char_start":32,"char_end":32}]
    }
  ]
}


File "", line 0, character 0 - line 0, character -1:

3 errors found.
