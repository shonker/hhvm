{
  "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af",
  "kind": "struct",
  "language": "C++",
  "prot": "public",
  "compoundname_html": "apache::thrift::op::detail::IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;",
  "basecompoundref": [
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1MapEquality",
      "prot": "public",
      "virtual": "non-virtual",
      "text_html": "apache::thrift::op::detail::MapEquality&lt; KTag, VTag, IdenticalTo, type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;",
      "compoundname_html": "apache::thrift::op::detail::MapEquality",
      "href": "/ref/cpp/struct/apache/thrift/op/detail/MapEquality"
    }
  ],
  "includes": {
    "refid": "detail_2Compare_8h",
    "local": "no",
    "text_html": "Compare.h"
  },
  "tparams": [
    {
      "type_html": "typename T"
    },
    {
      "type_html": "typename KTag"
    },
    {
      "type_html": "typename VTag"
    }
  ],
  "location": {
    "file": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
    "line": "564",
    "column": "1",
    "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
    "bodystart": "569",
    "bodyend": "569"
  },
  "namespacednames_html": [
    "apache",
    "thrift",
    "op",
    "detail",
    "IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;"
  ],
  "enums": [],
  "types": [],
  "functions": [],
  "members": [],
  "friends": [],
  "declaration_raw": "template <\n  typename T,\n  typename KTag,\n  typename VTag\n> struct IdenticalTo< type::cpp_type< T, type::map< KTag, VTag > > >;",
  "declaration_html": "template &lt;\n  typename T,\n  typename KTag,\n  typename VTag\n&gt; struct IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;;",
  "filepath": "struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af",
  "href": "/ref/cpp/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af",
  "specializes": "structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo",
  "overloadgroups": [
    {
      "groupname_html": "",
      "overloadsets": [
        {
          "kind": "overloadset",
          "name_html": "operator()",
          "compoundname_html": "apache::thrift::op::detail::IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;::operator()",
          "functions": [
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1MapEquality_1a46a69fc4402975865b6cf7a7751428b8",
              "prot": "public",
              "static": "no",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "bool",
              "definition_html": "bool apache::thrift::op::detail::MapEquality&lt; KTag, VTag, Equality, Tag, T &gt;::operator()",
              "argsstring_html": "(const T &amp;lhs, const T &amp;rhs) const",
              "name_html": "operator()",
              "param": [
                {
                  "type_html": "const T &amp;",
                  "declname_html": "lhs"
                },
                {
                  "type_html": "const T &amp;",
                  "declname_html": "rhs"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
                "line": "523",
                "column": "8",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
                "bodystart": "523",
                "bodyend": "536"
              },
              "definition": {
                "simple_html": "bool operator()(const T&amp; lhs, const T&amp; rhs) const",
                "simple_raw": "bool operator()(const T& lhs, const T& rhs) const",
                "detailed_html": "inline bool operator()(const T&amp; lhs, const T&amp; rhs) const",
                "detailed_raw": "inline bool operator()(const T& lhs, const T& rhs) const",
                "original_definition_html": "bool apache::thrift::op::detail::MapEquality&lt; KTag, VTag, Equality, Tag, T &gt;::operator()",
                "original_argsstring_html": "(const T &amp;lhs, const T &amp;rhs) const"
              },
              "filepath": "fns/struct/apache/thrift/op/detail/MapEquality/operator.call",
              "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/MapEquality/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1MapEquality",
              "compoundname_html": "apache::thrift::op::detail::IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;::operator()"
            }
          ],
          "filepath": "f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af/operator.call",
          "minprot": "public",
          "displayname_html": "operator()",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af/operator.call",
          "refid": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af/operator.call",
          "parent_links": [
            {
              "text_html": "IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;",
              "href": "/ref/cpp/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "createHashMap",
          "compoundname_html": "apache::thrift::op::detail::IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;::createHashMap",
          "functions": [
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1MapEquality_1a71e34ca0ae6cb7406858cf02d201e2e4",
              "prot": "private",
              "static": "yes",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "auto",
              "definition_html": "static auto apache::thrift::op::detail::MapEquality&lt; KTag, VTag, Equality, Tag, T &gt;::createHashMap",
              "argsstring_html": "(const T &amp;map)",
              "name_html": "createHashMap",
              "param": [
                {
                  "type_html": "const T &amp;",
                  "declname_html": "map"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
                "line": "540",
                "column": "15",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
                "bodystart": "540",
                "bodyend": "546"
              },
              "definition": {
                "simple_html": "static auto createHashMap(const T&amp; map)",
                "simple_raw": "static auto createHashMap(const T& map)",
                "detailed_html": "private inline static auto createHashMap(const T&amp; map)",
                "detailed_raw": "private inline static auto createHashMap(const T& map)",
                "original_definition_html": "static auto apache::thrift::op::detail::MapEquality&lt; KTag, VTag, Equality, Tag, T &gt;::createHashMap",
                "original_argsstring_html": "(const T &amp;map)"
              },
              "filepath": "fns/struct/apache/thrift/op/detail/MapEquality/createHashMap",
              "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/MapEquality/createHashMap",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1MapEquality",
              "compoundname_html": "apache::thrift::op::detail::IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;::createHashMap"
            }
          ],
          "filepath": "f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af/createHashMap",
          "minprot": "private",
          "displayname_html": "createHashMap",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af/createHashMap",
          "refid": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af/createHashMap",
          "parent_links": [
            {
              "text_html": "IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;",
              "href": "/ref/cpp/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "inRange",
          "compoundname_html": "apache::thrift::op::detail::IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;::inRange",
          "functions": [
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1MapEquality_1aec7ef31a97309c16443dae4bb8d0d1cb",
              "prot": "private",
              "static": "yes",
              "const": "no",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename E"
                },
                {
                  "type_html": "typename R"
                }
              ],
              "type_html": "bool",
              "definition_html": "static bool apache::thrift::op::detail::MapEquality&lt; KTag, VTag, Equality, Tag, T &gt;::inRange",
              "argsstring_html": "(const E &amp;entry, const R &amp;range)",
              "name_html": "inRange",
              "param": [
                {
                  "type_html": "const E &amp;",
                  "declname_html": "entry"
                },
                {
                  "type_html": "const R &amp;",
                  "declname_html": "range"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
                "line": "550",
                "column": "15",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/detail/Compare.h",
                "bodystart": "550",
                "bodyend": "558"
              },
              "definition": {
                "simple_html": "template &lt;typename E, typename R&gt;\nstatic bool inRange(const E&amp; entry, const R&amp; range)",
                "simple_raw": "template <typename E, typename R>\nstatic bool inRange(const E& entry, const R& range)",
                "detailed_html": "template &lt;typename E, typename R&gt;\nprivate inline static bool inRange(const E&amp; entry, const R&amp; range)",
                "detailed_raw": "template <typename E, typename R>\nprivate inline static bool inRange(const E& entry, const R& range)",
                "original_definition_html": "static bool apache::thrift::op::detail::MapEquality&lt; KTag, VTag, Equality, Tag, T &gt;::inRange",
                "original_argsstring_html": "(const E &amp;entry, const R &amp;range)"
              },
              "filepath": "fns/struct/apache/thrift/op/detail/MapEquality/inRange",
              "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/MapEquality/inRange",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1MapEquality",
              "compoundname_html": "apache::thrift::op::detail::IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;::inRange"
            }
          ],
          "filepath": "f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af/inRange",
          "minprot": "private",
          "displayname_html": "inRange",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af/inRange",
          "refid": "/ref/cpp/f/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af/inRange",
          "parent_links": [
            {
              "text_html": "IdenticalTo&lt; type::cpp_type&lt; T, type::map&lt; KTag, VTag &gt; &gt; &gt;",
              "href": "/ref/cpp/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1IdenticalTo_3_01type_1_1cpp__type_3_01T_00_01type_1_1m4e7e1280bf1651e3175e00d3564108af"
            }
          ]
        }
      ]
    }
  ],
  "free_overloadgroups": []
}