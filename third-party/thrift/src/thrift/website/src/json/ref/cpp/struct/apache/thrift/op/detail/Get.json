{
  "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get",
  "kind": "struct",
  "language": "C++",
  "prot": "public",
  "compoundname_html": "apache::thrift::op::detail::Get",
  "includes": {
    "refid": "Get_8h",
    "local": "no",
    "text_html": "Get.h"
  },
  "tparams": [
    {
      "type_html": "typename Id"
    },
    {
      "type_html": "typename T"
    },
    {
      "type_html": "typename"
    }
  ],
  "functions": [
    {
      "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_1ad67c7830e8d81d4e4486ba6a28c602d6",
      "prot": "public",
      "static": "no",
      "constexpr": "yes",
      "const": "yes",
      "explicit": "no",
      "inline": "yes",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename U"
        }
      ],
      "type_html": "constexpr decltype(auto)",
      "definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, T, typename &gt;::operator()",
      "argsstring_html": "(U &amp;&amp;obj) const",
      "name_html": "operator()",
      "param": [
        {
          "type_html": "U &amp;&amp;",
          "declname_html": "obj"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "225",
        "column": "22",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "225",
        "bodyend": "227"
      },
      "definition": {
        "simple_html": "template &lt;typename U&gt;\nconstexpr decltype(auto) operator()(U&amp;&amp; obj) const",
        "simple_raw": "template <typename U>\nconstexpr decltype(auto) operator()(U&& obj) const",
        "detailed_html": "template &lt;typename U&gt;\ninline constexpr decltype(auto) operator()(U&amp;&amp; obj) const",
        "detailed_raw": "template <typename U>\ninline constexpr decltype(auto) operator()(U&& obj) const",
        "original_definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, T, typename &gt;::operator()",
        "original_argsstring_html": "(U &amp;&amp;obj) const"
      },
      "filepath": "fns/struct/apache/thrift/op/detail/Get/operator.call",
      "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/Get/operator.call"
    }
  ],
  "location": {
    "file": "fbcode/thrift/lib/cpp2/op/Get.h",
    "line": "223",
    "column": "1",
    "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
    "bodystart": "223",
    "bodyend": "228"
  },
  "namespacednames_html": [
    "apache",
    "thrift",
    "op",
    "detail",
    "Get"
  ],
  "enums": [],
  "types": [],
  "members": [],
  "friends": [],
  "declaration_raw": "template <\n  typename Id,\n  typename T,\n  typename\n> struct Get;",
  "declaration_html": "template &lt;\n  typename Id,\n  typename T,\n  typename\n&gt; struct Get;",
  "filepath": "struct/apache/thrift/op/detail/Get",
  "href": "/ref/cpp/struct/apache/thrift/op/detail/Get",
  "specializedBy": [
    "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4",
    "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01void_01_4",
    "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01void_00_01void_01_4"
  ],
  "free_vars": [
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a8985ca524d324831ab5b2928777a7509",
      "prot": "public",
      "static": "no",
      "constexpr": "yes",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename T"
        }
      ],
      "type_html": "constexpr std::size_t",
      "definition_html": "constexpr std::size_t apache::thrift::op::size_v",
      "argsstring_html": "",
      "name_html": "size_v",
      "initializer_html": "= detail::pa::__fbthrift_field_size_v&lt;T&gt;",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "34",
        "column": "30",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "34",
        "bodyend": "-1"
      },
      "description": {
        "brief_html": "<p>Resolves to the number of definitions contained in Thrift class. </p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a22123706ff2b5349087d0d6003d47cc9",
      "prot": "public",
      "static": "no",
      "constexpr": "yes",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "constexpr type::Ordinal",
      "definition_html": "constexpr type::Ordinal apache::thrift::op::get_ordinal_v",
      "argsstring_html": "",
      "name_html": "get_ordinal_v",
      "initializer_html": "= <code>get_ordinal</code>&lt;T, Id&gt;::<code>value</code>",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "46",
        "column": "32",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "46",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the ordinal, for example:</p>\n<p><ul>\n<li><p>using Ord = <code>get_ordinal_v&lt;MyS, ident::foo&gt;</code> // Resolves to ordinal at which the field \"foo\" was defined in MyS. </p>\n</li></ul>\n</p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1adee0a72779ea33d305efb7f850e888f4",
      "prot": "public",
      "static": "no",
      "constexpr": "yes",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "constexpr FieldId",
      "definition_html": "constexpr FieldId apache::thrift::op::get_field_id_v",
      "argsstring_html": "",
      "name_html": "get_field_id_v",
      "initializer_html": "= <code>get_field_id</code>&lt;T, Id&gt;::<code>value</code>",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "79",
        "column": "26",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "79",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the field id, for example:</p>\n<p><ul>\n<li><p>using FieldId = <code>get_field_id&lt;MyS, ident::foo&gt;</code> // Resolves to field id assigned to the field \"foo\" in MyS. </p>\n</li></ul>\n</p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a9a190cd652048b8a72492e4439389e2c",
      "prot": "public",
      "static": "no",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "const folly::StringPiece",
      "definition_html": "const folly::StringPiece apache::thrift::op::get_name_v",
      "argsstring_html": "",
      "name_html": "get_name_v",
      "initializer_html": "=\n    detail::pa::__fbthrift_get_field_name&lt;T, <code>get_ordinal</code>&lt;T, Id&gt;&gt;()",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "136",
        "column": "33",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "136",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the thrift field name, for example:</p>\n<p><ul>\n<li><p><code>op::get_name_v</code>&lt;MyStruct, field_id&lt;7&gt;&gt; // Returns the thrift field name associated with field 7 in MyStruct. </p>\n</li></ul>\n</p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1af7ae14d4c1ef32287de89990031bc2e6",
      "prot": "public",
      "static": "no",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename T"
        }
      ],
      "type_html": "const folly::StringPiece",
      "definition_html": "const folly::StringPiece apache::thrift::op::get_class_name_v",
      "argsstring_html": "",
      "name_html": "get_class_name_v",
      "initializer_html": "=\n    detail::pa::__fbthrift_get_class_name&lt;T&gt;()",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "144",
        "column": "33",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "144",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the thrift class name, for example:</p>\n<p><ul>\n<li><p><code>op::get_class_name_v&lt;MyStruct&gt;</code> == \"MyStruct\" </p>\n</li></ul>\n</p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1ad37bad5a31f2016f305918220ef02af6",
      "prot": "public",
      "static": "no",
      "constexpr": "yes",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename Id",
          "defval_html": "void"
        },
        {
          "type_html": "typename T",
          "defval_html": "void"
        }
      ],
      "type_html": "constexpr <code>detail::Get</code>&lt; Id, T &gt;",
      "definition_html": "constexpr detail::Get&lt;Id, T&gt; apache::thrift::op::get",
      "argsstring_html": "",
      "name_html": "get",
      "initializer_html": "= {}",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "152",
        "column": "30",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "152",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the Thrift field, for example:</p>\n<p><code>op::get</code>&lt;type::field_id&lt;7&gt;&gt;(myStruct) = 4; </p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a390e6128c320e609986efad22788b623",
      "prot": "public",
      "static": "no",
      "constexpr": "yes",
      "mutable": "no",
      "type_html": "constexpr <a href=\"https://www.internalfb.com/intern/staticdocs/fbcref/ref/cpp/struct/apache/thrift/op/detail/GetValueOrNull\">detail::GetValueOrNull</a>",
      "definition_html": "constexpr detail::GetValueOrNull apache::thrift::op::getValueOrNull",
      "argsstring_html": "",
      "name_html": "getValueOrNull",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "163",
        "column": "41",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "163",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Returns pointer to the value from the given field. Returns nullptr if it doesn't have a value. For example:<ul>\n<li><p>get_value_or_null(foo.field_ref()) // returns foo.field_ref().<code>value()</code></p>\n</li><li><p>get_value_or_null(foo.smart_ptr_ref()) // returns *foo.smart_ptr_ref()</p>\n</li><li><p>get_value_or_null(foo.optional_ref()) // returns nullptr if optional field doesn't have a value. </p>\n</li></ul>\n</p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a8ba266b54d41d3013161f4cc09b05cf5",
      "prot": "public",
      "static": "no",
      "constexpr": "yes",
      "mutable": "no",
      "tparams": [
        {
          "type_html": "typename T"
        }
      ],
      "type_html": "constexpr <a href=\"https://www.internalfb.com/intern/staticdocs/fbcref/ref/cpp/class/apache/thrift/op/detail/InvokeByFieldId\">detail::InvokeByFieldId</a>&lt; T &gt;",
      "definition_html": "constexpr detail::InvokeByFieldId&lt;T&gt; apache::thrift::op::invoke_by_field_id",
      "argsstring_html": "",
      "name_html": "invoke_by_field_id",
      "initializer_html": "{}",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "342",
        "column": "42",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "342",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Given a Thrift struct, callback with a runtime dynamic field id, convert it to static compile-time field id and invoke the callback. For example,</p>\n<p><code>invoke_by_field_id&lt;T&gt;(FieldId{10}, f)</code> invokes <code>f(field_id&lt;10&gt;{})</code>.</p>\n<p>If field id is not found in T, <code>f()</code> will be invoked.</p>\n<p>In addition, <code>invoke_by_field_id&lt;T&gt;(id, f...)</code> is a syntactic sugar of <code>invoke_by_field_id&lt;T&gt;(id, folly::overload(f...))</code>. WARNING: inline expansion will always be applied to the call sites. </p>"
      }
    }
  ],
  "free_functions": [
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a86dfbaeff19f910adeae6b2753c2a25c",
      "prot": "public",
      "static": "no",
      "constexpr": "yes",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        }
      ],
      "type_html": "constexpr void",
      "definition_html": "constexpr void apache::thrift::op::for_each_ordinal",
      "argsstring_html": "(F &amp;&amp;f)",
      "name_html": "for_each_ordinal",
      "param": [
        {
          "type_html": "F &amp;&amp;",
          "declname_html": "f"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "50",
        "column": "16",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "50",
        "bodyend": "53"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F&gt;\nconstexpr void for_each_ordinal(F&amp;&amp; f)",
        "simple_raw": "template <typename T, typename F>\nconstexpr void for_each_ordinal(F&& f)",
        "detailed_html": "template &lt;typename T, typename F&gt;\nconstexpr void for_each_ordinal(F&amp;&amp; f)",
        "detailed_raw": "template <typename T, typename F>\nconstexpr void for_each_ordinal(F&& f)",
        "original_definition_html": "constexpr void apache::thrift::op::for_each_ordinal",
        "original_argsstring_html": "(F &amp;&amp;f)"
      },
      "description": {
        "brief_html": "<p>Calls the given function with ordinal&lt;1&gt; to ordinal&lt;N&gt;. </p>"
      },
      "compoundname_html": "apache::thrift::op::for_each_ordinal",
      "namespace_html": "apache::thrift::op"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a7fa501d28724abc0d374af4f0fc07de3",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        },
        {
          "type_html": "std::enable_if_t&lt; size_v&lt; T &gt; !=0 &gt; *",
          "defval_html": "nullptr"
        }
      ],
      "type_html": "decltype(auto)",
      "definition_html": "decltype(auto) apache::thrift::op::find_by_ordinal",
      "argsstring_html": "(F &amp;&amp;f)",
      "name_html": "find_by_ordinal",
      "param": [
        {
          "type_html": "F &amp;&amp;",
          "declname_html": "f"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "58",
        "column": "10",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "58",
        "bodyend": "61"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F, std::enable_if_t&lt;size_v&lt;T&gt; != 0&gt;* = nullptr&gt;\ndecltype(auto) find_by_ordinal(F&amp;&amp; f)",
        "simple_raw": "template <typename T, typename F, std::enable_if_t<size_v<T> != 0>* = nullptr>\ndecltype(auto) find_by_ordinal(F&& f)",
        "detailed_html": "template &lt;typename T, typename F, std::enable_if_t&lt;size_v&lt;T&gt; != 0&gt;* = nullptr&gt;\ndecltype(auto) find_by_ordinal(F&amp;&amp; f)",
        "detailed_raw": "template <typename T, typename F, std::enable_if_t<size_v<T> != 0>* = nullptr>\ndecltype(auto) find_by_ordinal(F&& f)",
        "original_definition_html": "decltype(auto) apache::thrift::op::find_by_ordinal",
        "original_argsstring_html": "(F &amp;&amp;f)"
      },
      "description": {
        "detailed_html": "<p>Calls the given function with with ordinal&lt;1&gt; to ordinal&lt;N&gt;, returing the first 'true' result produced. </p>"
      },
      "compoundname_html": "apache::thrift::op::find_by_ordinal",
      "namespace_html": "apache::thrift::op"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a117e68a0a022f8249eab743019a954a4",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        }
      ],
      "type_html": "std::enable_if_t&lt; <code>size_v</code>&lt; T &gt;==0, bool &gt;",
      "definition_html": "std::enable_if_t&lt;size_v&lt;T&gt; == 0, bool&gt; apache::thrift::op::find_by_ordinal",
      "argsstring_html": "(F &amp;&amp;)",
      "name_html": "find_by_ordinal",
      "param": [
        {
          "type_html": "F &amp;&amp;"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "64",
        "column": "18",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "64",
        "bodyend": "66"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F&gt;\n    std::enable_if_t &lt; size_v&lt;T &gt;= = 0, bool&gt; find_by_ordinal(F&amp;&amp;)",
        "simple_raw": "template <typename T, typename F>\n    std::enable_if_t < size_v<T >= = 0, bool> find_by_ordinal(F&&)",
        "detailed_html": "template &lt;typename T, typename F&gt;\n    std::enable_if_t &lt; size_v&lt;T &gt;= = 0, bool&gt; find_by_ordinal(F&amp;&amp;)",
        "detailed_raw": "template <typename T, typename F>\n    std::enable_if_t < size_v<T >= = 0, bool> find_by_ordinal(F&&)",
        "original_definition_html": "std::enable_if_t&lt;size_v&lt;T&gt; == 0, bool&gt; apache::thrift::op::find_by_ordinal",
        "original_argsstring_html": "(F &amp;&amp;)"
      },
      "compoundname_html": "apache::thrift::op::find_by_ordinal",
      "namespace_html": "apache::thrift::op"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1ae2020caaee0af4a9f88d29d02ef753a3",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        }
      ],
      "type_html": "void",
      "definition_html": "void apache::thrift::op::for_each_field_id",
      "argsstring_html": "(F &amp;&amp;f)",
      "name_html": "for_each_field_id",
      "param": [
        {
          "type_html": "F &amp;&amp;",
          "declname_html": "f"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "83",
        "column": "6",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "83",
        "bodyend": "85"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F&gt;\nvoid for_each_field_id(F&amp;&amp; f)",
        "simple_raw": "template <typename T, typename F>\nvoid for_each_field_id(F&& f)",
        "detailed_html": "template &lt;typename T, typename F&gt;\nvoid for_each_field_id(F&amp;&amp; f)",
        "detailed_raw": "template <typename T, typename F>\nvoid for_each_field_id(F&& f)",
        "original_definition_html": "void apache::thrift::op::for_each_field_id",
        "original_argsstring_html": "(F &amp;&amp;f)"
      },
      "description": {
        "brief_html": "<p>Calls the given function with each field_id&lt;{id}&gt; in Thrift class. </p>"
      },
      "compoundname_html": "apache::thrift::op::for_each_field_id",
      "namespace_html": "apache::thrift::op"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a9b457c0aa2c8946824a743069994e594",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        }
      ],
      "type_html": "decltype(auto)",
      "definition_html": "decltype(auto) apache::thrift::op::find_by_field_id",
      "argsstring_html": "(F &amp;&amp;f)",
      "name_html": "find_by_field_id",
      "param": [
        {
          "type_html": "F &amp;&amp;",
          "declname_html": "f"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "90",
        "column": "10",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "90",
        "bodyend": "93"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F&gt;\ndecltype(auto) find_by_field_id(F&amp;&amp; f)",
        "simple_raw": "template <typename T, typename F>\ndecltype(auto) find_by_field_id(F&& f)",
        "detailed_html": "template &lt;typename T, typename F&gt;\ndecltype(auto) find_by_field_id(F&amp;&amp; f)",
        "detailed_raw": "template <typename T, typename F>\ndecltype(auto) find_by_field_id(F&& f)",
        "original_definition_html": "decltype(auto) apache::thrift::op::find_by_field_id",
        "original_argsstring_html": "(F &amp;&amp;f)"
      },
      "description": {
        "detailed_html": "<p>Calls the given function with with each field_id&lt;{id}&gt;, returning the first 'true' result produced. </p>"
      },
      "compoundname_html": "apache::thrift::op::find_by_field_id",
      "namespace_html": "apache::thrift::op"
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a9f3f8a01b527820b6977f51cc1ab3cb6",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename F"
        }
      ],
      "type_html": "void",
      "definition_html": "void apache::thrift::op::for_each_ident",
      "argsstring_html": "(F &amp;&amp;f)",
      "name_html": "for_each_ident",
      "param": [
        {
          "type_html": "F &amp;&amp;",
          "declname_html": "f"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "106",
        "column": "6",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "106",
        "bodyend": "109"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ident(F&amp;&amp; f)",
        "simple_raw": "template <typename T, typename F>\nvoid for_each_ident(F&& f)",
        "detailed_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ident(F&amp;&amp; f)",
        "detailed_raw": "template <typename T, typename F>\nvoid for_each_ident(F&& f)",
        "original_definition_html": "void apache::thrift::op::for_each_ident",
        "original_argsstring_html": "(F &amp;&amp;f)"
      },
      "description": {
        "detailed_html": "<p>It calls the given function with each folly::tag&lt;thrift::ident::*&gt;{} in Thrift class. </p>"
      },
      "compoundname_html": "apache::thrift::op::for_each_ident",
      "namespace_html": "apache::thrift::op"
    }
  ],
  "free_typedefs": [
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1af1e9d6c6072129ec31b22cb261a62555",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "typename <a href=\"https://www.internalfb.com/intern/staticdocs/fbcref/ref/cpp/struct/apache/thrift/op/detail/GetOrdinalImpl\">detail::GetOrdinalImpl</a>&lt;Id, type::infer_tag&lt;T&gt;&gt;::type",
      "definition_html": "using apache::thrift::op::get_ordinal = typedef typename detail::GetOrdinalImpl&lt;Id, type::infer_tag&lt;T&gt; &gt;::type",
      "argsstring_html": "",
      "name_html": "get_ordinal",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "37",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "38",
        "bodyend": "-1"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a1cc2ff3f076c63ae84d1df67fb6b0334",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "folly::conditional_t&lt;\n    <code>get_ordinal</code>&lt;T, Id&gt;::<code>value</code> == type::Ordinal{},\n    type::field_id&lt;0&gt;,\n    detail::pa::field_id&lt;T,<code> get_ordinal</code>&lt;T, Id&gt;&gt;&gt;",
      "definition_html": "using apache::thrift::op::get_field_id = typedef folly::conditional_t&lt; get_ordinal&lt;T, Id&gt;::value == type::Ordinal{}, type::field_id&lt;0&gt;, detail::pa::field_id&lt;T, get_ordinal&lt;T, Id&gt; &gt;&gt;",
      "argsstring_html": "",
      "name_html": "get_field_id",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "69",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "72",
        "bodyend": "-1"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1ada84492fc1972941c81f6ddd514baf18",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "detail::pa::ident&lt;T, <code>get_ordinal</code>&lt;T, Id&gt;&gt;",
      "definition_html": "using apache::thrift::op::get_ident = typedef detail::pa::ident&lt;T, get_ordinal&lt;T, Id&gt; &gt;",
      "argsstring_html": "",
      "name_html": "get_ident",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "101",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "101",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the ident, for example:</p>\n<p>// Resolves to <code>thrift::ident</code>::* type associated with field 7 in MyS. using Ident = get_ident&lt;MyS, field_id&lt;7&gt;&gt; </p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a65d3e354cd701e9cadbbb387eb454e15",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "detail::pa::type_tag&lt;T, <code>get_ordinal</code>&lt;T, Id&gt;&gt;",
      "definition_html": "using apache::thrift::op::get_type_tag = typedef detail::pa::type_tag&lt;T, get_ordinal&lt;T, Id&gt; &gt;",
      "argsstring_html": "",
      "name_html": "get_type_tag",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "117",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "117",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the Thrift type tag, for example:</p>\n<p>// Resolves to Thrift type tag for the field \"foo\" in MyS. using Tag = <code>get_type_tag&lt;MyS, ident::foo&gt;</code> </p>"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1aabd5c84a3146d521fd71db71699df7dc",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "typename std::conditional_t&lt;\n    <code>get_ordinal</code>&lt;T, Id&gt;::<code>value</code> == type::Ordinal{},\n    void,\n    type::field&lt;<code>\n        get_type_tag</code>&lt;T, Id&gt;,\n        FieldContext&lt;T, folly::to_underlying(<code>get_field_id_v</code>&lt;T, Id&gt;)&gt;&gt;&gt;",
      "definition_html": "using apache::thrift::op::get_field_tag = typedef typename std::conditional_t&lt; get_ordinal&lt;T, Id&gt;::value == type::Ordinal{}, void, type::field&lt; get_type_tag&lt;T, Id&gt;, FieldContext&lt;T, folly::to_underlying(get_field_id_v&lt;T, Id&gt;)&gt; &gt;&gt;",
      "argsstring_html": "",
      "name_html": "get_field_tag",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "120",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "125",
        "bodyend": "-1"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1aa9fe99e4ad3dff46dd02cc6a3d9c8e6f",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "type::native_type&lt;<code>get_field_tag</code>&lt;T, Id&gt;&gt;",
      "definition_html": "using apache::thrift::op::get_native_type = typedef type::native_type&lt;get_field_tag&lt;T, Id&gt; &gt;",
      "argsstring_html": "",
      "name_html": "get_native_type",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "128",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "128",
        "bodyend": "-1"
      }
    },
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a1e0df33c732cdf0eec44982922547666",
      "prot": "public",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Id"
        }
      ],
      "type_html": "folly::remove_cvref_t&lt;decltype(<code>get</code>&lt;Id&gt;(std::declval&lt;T&amp;&gt;()))&gt;",
      "definition_html": "using apache::thrift::op::get_field_ref = typedef folly::remove_cvref_t&lt;decltype(get&lt;Id&gt;(std::declval&lt;T&amp;&gt;()))&gt;",
      "argsstring_html": "",
      "name_html": "get_field_ref",
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Get.h",
        "line": "172",
        "column": "1",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
        "bodystart": "173",
        "bodyend": "-1"
      },
      "description": {
        "detailed_html": "<p>Gets the field ref type of Thrift field, for example: <pre>std::is_same_v&lt;\n    get_field_ref&lt;MyS, ident::foo&gt;,\n    optional_field_ref&lt;std::string&amp;&gt;&gt;;\n</pre> </p>"
      }
    }
  ],
  "overloadgroups": [
    {
      "groupname_html": "",
      "overloadsets": [
        {
          "kind": "overloadset",
          "name_html": "operator()",
          "compoundname_html": "apache::thrift::op::detail::Get::operator()",
          "functions": [
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_1ad67c7830e8d81d4e4486ba6a28c602d6",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U"
                }
              ],
              "type_html": "constexpr decltype(auto)",
              "definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, T, typename &gt;::operator()",
              "argsstring_html": "(U &amp;&amp;obj) const",
              "name_html": "operator()",
              "param": [
                {
                  "type_html": "U &amp;&amp;",
                  "declname_html": "obj"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "225",
                "column": "22",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "225",
                "bodyend": "227"
              },
              "definition": {
                "simple_html": "template &lt;typename U&gt;\nconstexpr decltype(auto) operator()(U&amp;&amp; obj) const",
                "simple_raw": "template <typename U>\nconstexpr decltype(auto) operator()(U&& obj) const",
                "detailed_html": "template &lt;typename U&gt;\ninline constexpr decltype(auto) operator()(U&amp;&amp; obj) const",
                "detailed_raw": "template <typename U>\ninline constexpr decltype(auto) operator()(U&& obj) const",
                "original_definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, T, typename &gt;::operator()",
                "original_argsstring_html": "(U &amp;&amp;obj) const"
              },
              "filepath": "fns/struct/apache/thrift/op/detail/Get/operator.call",
              "href": "/ref/cpp/fns/struct/apache/thrift/op/detail/Get/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get",
              "compoundname_html": "apache::thrift::op::detail::Get::operator()"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4_1a11e1c6b6f838b94def8619caa1076ddb",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "constexpr decltype(auto)",
              "definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, Tag, type::if_concrete&lt; Tag &gt; &gt;::operator()",
              "argsstring_html": "(T &amp;obj) const",
              "name_html": "operator()",
              "param": [
                {
                  "type_html": "<code>T</code> &amp;",
                  "declname_html": "obj"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "232",
                "column": "22",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "232",
                "bodyend": "234"
              },
              "definition": {
                "simple_html": "constexpr decltype(auto) operator()(T&amp; obj) const",
                "simple_raw": "constexpr decltype(auto) operator()(T& obj) const",
                "detailed_html": "inline constexpr decltype(auto) operator()(T&amp; obj) const",
                "detailed_raw": "inline constexpr decltype(auto) operator()(T& obj) const",
                "original_definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, Tag, type::if_concrete&lt; Tag &gt; &gt;::operator()",
                "original_argsstring_html": "(T &amp;obj) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4",
              "compoundname_html": "apache::thrift::op::detail::Get::operator()"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4_1a9844fb0778416fc380a7cd5df4869737",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "constexpr decltype(auto)",
              "definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, Tag, type::if_concrete&lt; Tag &gt; &gt;::operator()",
              "argsstring_html": "(T &amp;&amp;obj) const",
              "name_html": "operator()",
              "param": [
                {
                  "type_html": "<code>T</code> &amp;&amp;",
                  "declname_html": "obj"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "235",
                "column": "22",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "235",
                "bodyend": "237"
              },
              "definition": {
                "simple_html": "constexpr decltype(auto) operator()(T&amp;&amp; obj) const",
                "simple_raw": "constexpr decltype(auto) operator()(T&& obj) const",
                "detailed_html": "inline constexpr decltype(auto) operator()(T&amp;&amp; obj) const",
                "detailed_raw": "inline constexpr decltype(auto) operator()(T&& obj) const",
                "original_definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, Tag, type::if_concrete&lt; Tag &gt; &gt;::operator()",
                "original_argsstring_html": "(T &amp;&amp;obj) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4",
              "compoundname_html": "apache::thrift::op::detail::Get::operator()"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4_1a1004d83bed7ae4e17c485d035a560d66",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "constexpr decltype(auto)",
              "definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, Tag, type::if_concrete&lt; Tag &gt; &gt;::operator()",
              "argsstring_html": "(const T &amp;obj) const",
              "name_html": "operator()",
              "param": [
                {
                  "type_html": "const <code>T</code> &amp;",
                  "declname_html": "obj"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "238",
                "column": "22",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "238",
                "bodyend": "240"
              },
              "definition": {
                "simple_html": "constexpr decltype(auto) operator()(const T&amp; obj) const",
                "simple_raw": "constexpr decltype(auto) operator()(const T& obj) const",
                "detailed_html": "inline constexpr decltype(auto) operator()(const T&amp; obj) const",
                "detailed_raw": "inline constexpr decltype(auto) operator()(const T& obj) const",
                "original_definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, Tag, type::if_concrete&lt; Tag &gt; &gt;::operator()",
                "original_argsstring_html": "(const T &amp;obj) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4",
              "compoundname_html": "apache::thrift::op::detail::Get::operator()"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4_1a51e9701df4e03e2e1dbbcc5acdaff2c7",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "type_html": "constexpr decltype(auto)",
              "definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, Tag, type::if_concrete&lt; Tag &gt; &gt;::operator()",
              "argsstring_html": "(const T &amp;&amp;obj) const",
              "name_html": "operator()",
              "param": [
                {
                  "type_html": "const <code>T</code> &amp;&amp;",
                  "declname_html": "obj"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "241",
                "column": "22",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "241",
                "bodyend": "243"
              },
              "definition": {
                "simple_html": "constexpr decltype(auto) operator()(const T&amp;&amp; obj) const",
                "simple_raw": "constexpr decltype(auto) operator()(const T&& obj) const",
                "detailed_html": "inline constexpr decltype(auto) operator()(const T&amp;&amp; obj) const",
                "detailed_raw": "inline constexpr decltype(auto) operator()(const T&& obj) const",
                "original_definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, Tag, type::if_concrete&lt; Tag &gt; &gt;::operator()",
                "original_argsstring_html": "(const T &amp;&amp;obj) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01Tag_00_01type_1_1if__concrete_3_01Tag_01_4_01_4",
              "compoundname_html": "apache::thrift::op::detail::Get::operator()"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01void_01_4_1af44ddd6de7dafc24302664b2953f3034",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename U"
                }
              ],
              "type_html": "constexpr decltype(auto)",
              "definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, void &gt;::operator()",
              "argsstring_html": "(U &amp;&amp;obj) const",
              "name_html": "operator()",
              "param": [
                {
                  "type_html": "U &amp;&amp;",
                  "declname_html": "obj"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "249",
                "column": "22",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "249",
                "bodyend": "251"
              },
              "definition": {
                "simple_html": "template &lt;typename U&gt;\nconstexpr decltype(auto) operator()(U&amp;&amp; obj) const",
                "simple_raw": "template <typename U>\nconstexpr decltype(auto) operator()(U&& obj) const",
                "detailed_html": "template &lt;typename U&gt;\ninline constexpr decltype(auto) operator()(U&amp;&amp; obj) const",
                "detailed_raw": "template <typename U>\ninline constexpr decltype(auto) operator()(U&& obj) const",
                "original_definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; Id, void &gt;::operator()",
                "original_argsstring_html": "(U &amp;&amp;obj) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01void_01_4/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01void_01_4/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01Id_00_01void_01_4",
              "compoundname_html": "apache::thrift::op::detail::Get::operator()"
            },
            {
              "refid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01void_00_01void_01_4_1a228543e97beb573f30e4831261c16822",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "yes",
              "explicit": "no",
              "inline": "yes",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename Id"
                },
                {
                  "type_html": "typename U"
                }
              ],
              "type_html": "constexpr decltype(auto)",
              "definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; void, void &gt;::operator()",
              "argsstring_html": "(Id, U &amp;&amp;obj) const",
              "name_html": "operator()",
              "param": [
                {
                  "type_html": "Id"
                },
                {
                  "type_html": "U &amp;&amp;",
                  "declname_html": "obj"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "256",
                "column": "22",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "256",
                "bodyend": "258"
              },
              "definition": {
                "simple_html": "template &lt;typename Id, typename U&gt;\nconstexpr decltype(auto) operator()(Id, U&amp;&amp; obj) const",
                "simple_raw": "template <typename Id, typename U>\nconstexpr decltype(auto) operator()(Id, U&& obj) const",
                "detailed_html": "template &lt;typename Id, typename U&gt;\ninline constexpr decltype(auto) operator()(Id, U&amp;&amp; obj) const",
                "detailed_raw": "template <typename Id, typename U>\ninline constexpr decltype(auto) operator()(Id, U&& obj) const",
                "original_definition_html": "constexpr decltype(auto) apache::thrift::op::detail::Get&lt; void, void &gt;::operator()",
                "original_argsstring_html": "(Id, U &amp;&amp;obj) const"
              },
              "filepath": "fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01void_00_01void_01_4/operator.call",
              "href": "/ref/cpp/fns/struct/special/structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01void_00_01void_01_4/operator.call",
              "parentid": "structapache_1_1thrift_1_1op_1_1detail_1_1Get_3_01void_00_01void_01_4",
              "compoundname_html": "apache::thrift::op::detail::Get::operator()"
            }
          ],
          "filepath": "f/struct/apache/thrift/op/detail/Get/operator.call",
          "minprot": "public",
          "displayname_html": "operator()",
          "brief_html": "",
          "groupname_html": "",
          "href": "/ref/cpp/f/struct/apache/thrift/op/detail/Get/operator.call",
          "refid": "/ref/cpp/f/struct/apache/thrift/op/detail/Get/operator.call",
          "parent_links": [
            {
              "text_html": "Get",
              "href": "/ref/cpp/struct/apache/thrift/op/detail/Get"
            }
          ]
        }
      ]
    }
  ],
  "free_overloadgroups": [
    {
      "groupname_html": "",
      "overloadsets": [
        {
          "kind": "overloadset",
          "name_html": "for_each_ordinal",
          "compoundname_html": "apache::thrift::op::for_each_ordinal",
          "functions": [
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1a86dfbaeff19f910adeae6b2753c2a25c",
              "prot": "public",
              "static": "no",
              "constexpr": "yes",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                }
              ],
              "type_html": "constexpr void",
              "definition_html": "constexpr void apache::thrift::op::for_each_ordinal",
              "argsstring_html": "(F &amp;&amp;f)",
              "name_html": "for_each_ordinal",
              "param": [
                {
                  "type_html": "F &amp;&amp;",
                  "declname_html": "f"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "50",
                "column": "16",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "50",
                "bodyend": "53"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F&gt;\nconstexpr void for_each_ordinal(F&amp;&amp; f)",
                "simple_raw": "template <typename T, typename F>\nconstexpr void for_each_ordinal(F&& f)",
                "detailed_html": "template &lt;typename T, typename F&gt;\nconstexpr void for_each_ordinal(F&amp;&amp; f)",
                "detailed_raw": "template <typename T, typename F>\nconstexpr void for_each_ordinal(F&& f)",
                "original_definition_html": "constexpr void apache::thrift::op::for_each_ordinal",
                "original_argsstring_html": "(F &amp;&amp;f)"
              },
              "description": {
                "brief_html": "<p>Calls the given function with ordinal&lt;1&gt; to ordinal&lt;N&gt;. </p>"
              },
              "compoundname_html": "apache::thrift::op::for_each_ordinal",
              "namespace_html": "apache::thrift::op"
            }
          ],
          "filepath": "f/assoc/struct/apache/thrift/op/detail/Get/for_each_ordinal",
          "namespace_html": "apache::thrift::op",
          "minprot": "public",
          "displayname_html": "for_each_ordinal",
          "brief_html": "<p>Calls the given function with ordinal&lt;1&gt; to ordinal&lt;N&gt;. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/assoc/struct/apache/thrift/op/detail/Get/for_each_ordinal",
          "refid": "/ref/cpp/f/assoc/struct/apache/thrift/op/detail/Get/for_each_ordinal",
          "parent_links": [
            {
              "text_html": "Get",
              "href": "/ref/cpp/struct/apache/thrift/op/detail/Get"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "find_by_ordinal",
          "compoundname_html": "apache::thrift::op::find_by_ordinal",
          "functions": [
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1a7fa501d28724abc0d374af4f0fc07de3",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                },
                {
                  "type_html": "std::enable_if_t&lt; size_v&lt; T &gt; !=0 &gt; *",
                  "defval_html": "nullptr"
                }
              ],
              "type_html": "decltype(auto)",
              "definition_html": "decltype(auto) apache::thrift::op::find_by_ordinal",
              "argsstring_html": "(F &amp;&amp;f)",
              "name_html": "find_by_ordinal",
              "param": [
                {
                  "type_html": "F &amp;&amp;",
                  "declname_html": "f"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "58",
                "column": "10",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "58",
                "bodyend": "61"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F, std::enable_if_t&lt;size_v&lt;T&gt; != 0&gt;* = nullptr&gt;\ndecltype(auto) find_by_ordinal(F&amp;&amp; f)",
                "simple_raw": "template <typename T, typename F, std::enable_if_t<size_v<T> != 0>* = nullptr>\ndecltype(auto) find_by_ordinal(F&& f)",
                "detailed_html": "template &lt;typename T, typename F, std::enable_if_t&lt;size_v&lt;T&gt; != 0&gt;* = nullptr&gt;\ndecltype(auto) find_by_ordinal(F&amp;&amp; f)",
                "detailed_raw": "template <typename T, typename F, std::enable_if_t<size_v<T> != 0>* = nullptr>\ndecltype(auto) find_by_ordinal(F&& f)",
                "original_definition_html": "decltype(auto) apache::thrift::op::find_by_ordinal",
                "original_argsstring_html": "(F &amp;&amp;f)"
              },
              "description": {
                "detailed_html": "<p>Calls the given function with with ordinal&lt;1&gt; to ordinal&lt;N&gt;, returing the first 'true' result produced. </p>"
              },
              "compoundname_html": "apache::thrift::op::find_by_ordinal",
              "namespace_html": "apache::thrift::op"
            },
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1a117e68a0a022f8249eab743019a954a4",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                }
              ],
              "type_html": "std::enable_if_t&lt; <code>size_v</code>&lt; T &gt;==0, bool &gt;",
              "definition_html": "std::enable_if_t&lt;size_v&lt;T&gt; == 0, bool&gt; apache::thrift::op::find_by_ordinal",
              "argsstring_html": "(F &amp;&amp;)",
              "name_html": "find_by_ordinal",
              "param": [
                {
                  "type_html": "F &amp;&amp;"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "64",
                "column": "18",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "64",
                "bodyend": "66"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F&gt;\n    std::enable_if_t &lt; size_v&lt;T &gt;= = 0, bool&gt; find_by_ordinal(F&amp;&amp;)",
                "simple_raw": "template <typename T, typename F>\n    std::enable_if_t < size_v<T >= = 0, bool> find_by_ordinal(F&&)",
                "detailed_html": "template &lt;typename T, typename F&gt;\n    std::enable_if_t &lt; size_v&lt;T &gt;= = 0, bool&gt; find_by_ordinal(F&amp;&amp;)",
                "detailed_raw": "template <typename T, typename F>\n    std::enable_if_t < size_v<T >= = 0, bool> find_by_ordinal(F&&)",
                "original_definition_html": "std::enable_if_t&lt;size_v&lt;T&gt; == 0, bool&gt; apache::thrift::op::find_by_ordinal",
                "original_argsstring_html": "(F &amp;&amp;)"
              },
              "compoundname_html": "apache::thrift::op::find_by_ordinal",
              "namespace_html": "apache::thrift::op"
            }
          ],
          "filepath": "f/assoc/struct/apache/thrift/op/detail/Get/find_by_ordinal",
          "namespace_html": "apache::thrift::op",
          "minprot": "public",
          "displayname_html": "find_by_ordinal",
          "brief_html": "<p>Calls the given function with with ordinal&lt;1&gt; to ordinal&lt;N&gt;, returing the first 'true' result produced. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/assoc/struct/apache/thrift/op/detail/Get/find_by_ordinal",
          "refid": "/ref/cpp/f/assoc/struct/apache/thrift/op/detail/Get/find_by_ordinal",
          "parent_links": [
            {
              "text_html": "Get",
              "href": "/ref/cpp/struct/apache/thrift/op/detail/Get"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "for_each_field_id",
          "compoundname_html": "apache::thrift::op::for_each_field_id",
          "functions": [
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1ae2020caaee0af4a9f88d29d02ef753a3",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                }
              ],
              "type_html": "void",
              "definition_html": "void apache::thrift::op::for_each_field_id",
              "argsstring_html": "(F &amp;&amp;f)",
              "name_html": "for_each_field_id",
              "param": [
                {
                  "type_html": "F &amp;&amp;",
                  "declname_html": "f"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "83",
                "column": "6",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "83",
                "bodyend": "85"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F&gt;\nvoid for_each_field_id(F&amp;&amp; f)",
                "simple_raw": "template <typename T, typename F>\nvoid for_each_field_id(F&& f)",
                "detailed_html": "template &lt;typename T, typename F&gt;\nvoid for_each_field_id(F&amp;&amp; f)",
                "detailed_raw": "template <typename T, typename F>\nvoid for_each_field_id(F&& f)",
                "original_definition_html": "void apache::thrift::op::for_each_field_id",
                "original_argsstring_html": "(F &amp;&amp;f)"
              },
              "description": {
                "brief_html": "<p>Calls the given function with each field_id&lt;{id}&gt; in Thrift class. </p>"
              },
              "compoundname_html": "apache::thrift::op::for_each_field_id",
              "namespace_html": "apache::thrift::op"
            }
          ],
          "filepath": "f/assoc/struct/apache/thrift/op/detail/Get/for_each_field_id",
          "namespace_html": "apache::thrift::op",
          "minprot": "public",
          "displayname_html": "for_each_field_id",
          "brief_html": "<p>Calls the given function with each field_id&lt;{id}&gt; in Thrift class. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/assoc/struct/apache/thrift/op/detail/Get/for_each_field_id",
          "refid": "/ref/cpp/f/assoc/struct/apache/thrift/op/detail/Get/for_each_field_id",
          "parent_links": [
            {
              "text_html": "Get",
              "href": "/ref/cpp/struct/apache/thrift/op/detail/Get"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "find_by_field_id",
          "compoundname_html": "apache::thrift::op::find_by_field_id",
          "functions": [
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1a9b457c0aa2c8946824a743069994e594",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                }
              ],
              "type_html": "decltype(auto)",
              "definition_html": "decltype(auto) apache::thrift::op::find_by_field_id",
              "argsstring_html": "(F &amp;&amp;f)",
              "name_html": "find_by_field_id",
              "param": [
                {
                  "type_html": "F &amp;&amp;",
                  "declname_html": "f"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "90",
                "column": "10",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "90",
                "bodyend": "93"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F&gt;\ndecltype(auto) find_by_field_id(F&amp;&amp; f)",
                "simple_raw": "template <typename T, typename F>\ndecltype(auto) find_by_field_id(F&& f)",
                "detailed_html": "template &lt;typename T, typename F&gt;\ndecltype(auto) find_by_field_id(F&amp;&amp; f)",
                "detailed_raw": "template <typename T, typename F>\ndecltype(auto) find_by_field_id(F&& f)",
                "original_definition_html": "decltype(auto) apache::thrift::op::find_by_field_id",
                "original_argsstring_html": "(F &amp;&amp;f)"
              },
              "description": {
                "detailed_html": "<p>Calls the given function with with each field_id&lt;{id}&gt;, returning the first 'true' result produced. </p>"
              },
              "compoundname_html": "apache::thrift::op::find_by_field_id",
              "namespace_html": "apache::thrift::op"
            }
          ],
          "filepath": "f/assoc/struct/apache/thrift/op/detail/Get/find_by_field_id",
          "namespace_html": "apache::thrift::op",
          "minprot": "public",
          "displayname_html": "find_by_field_id",
          "brief_html": "<p>Calls the given function with with each field_id&lt;{id}&gt;, returning the first 'true' result produced. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/assoc/struct/apache/thrift/op/detail/Get/find_by_field_id",
          "refid": "/ref/cpp/f/assoc/struct/apache/thrift/op/detail/Get/find_by_field_id",
          "parent_links": [
            {
              "text_html": "Get",
              "href": "/ref/cpp/struct/apache/thrift/op/detail/Get"
            }
          ]
        },
        {
          "kind": "overloadset",
          "name_html": "for_each_ident",
          "compoundname_html": "apache::thrift::op::for_each_ident",
          "functions": [
            {
              "refid": "namespaceapache_1_1thrift_1_1op_1a9f3f8a01b527820b6977f51cc1ab3cb6",
              "prot": "public",
              "static": "no",
              "const": "no",
              "explicit": "no",
              "inline": "no",
              "virtual": "non-virtual",
              "tparams": [
                {
                  "type_html": "typename T"
                },
                {
                  "type_html": "typename F"
                }
              ],
              "type_html": "void",
              "definition_html": "void apache::thrift::op::for_each_ident",
              "argsstring_html": "(F &amp;&amp;f)",
              "name_html": "for_each_ident",
              "param": [
                {
                  "type_html": "F &amp;&amp;",
                  "declname_html": "f"
                }
              ],
              "location": {
                "file": "fbcode/thrift/lib/cpp2/op/Get.h",
                "line": "106",
                "column": "6",
                "bodyfile": "fbcode/thrift/lib/cpp2/op/Get.h",
                "bodystart": "106",
                "bodyend": "109"
              },
              "definition": {
                "simple_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ident(F&amp;&amp; f)",
                "simple_raw": "template <typename T, typename F>\nvoid for_each_ident(F&& f)",
                "detailed_html": "template &lt;typename T, typename F&gt;\nvoid for_each_ident(F&amp;&amp; f)",
                "detailed_raw": "template <typename T, typename F>\nvoid for_each_ident(F&& f)",
                "original_definition_html": "void apache::thrift::op::for_each_ident",
                "original_argsstring_html": "(F &amp;&amp;f)"
              },
              "description": {
                "detailed_html": "<p>It calls the given function with each folly::tag&lt;thrift::ident::*&gt;{} in Thrift class. </p>"
              },
              "compoundname_html": "apache::thrift::op::for_each_ident",
              "namespace_html": "apache::thrift::op"
            }
          ],
          "filepath": "f/assoc/struct/apache/thrift/op/detail/Get/for_each_ident",
          "namespace_html": "apache::thrift::op",
          "minprot": "public",
          "displayname_html": "for_each_ident",
          "brief_html": "<p>It calls the given function with each folly::tag&lt;thrift::ident::*&gt;{} in Thrift class. </p>",
          "groupname_html": "",
          "href": "/ref/cpp/f/assoc/struct/apache/thrift/op/detail/Get/for_each_ident",
          "refid": "/ref/cpp/f/assoc/struct/apache/thrift/op/detail/Get/for_each_ident",
          "parent_links": [
            {
              "text_html": "Get",
              "href": "/ref/cpp/struct/apache/thrift/op/detail/Get"
            }
          ]
        }
      ]
    }
  ]
}