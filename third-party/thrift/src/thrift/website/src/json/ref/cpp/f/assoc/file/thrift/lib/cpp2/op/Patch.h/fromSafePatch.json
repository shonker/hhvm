{
  "kind": "overloadset",
  "name_html": "fromSafePatch",
  "compoundname_html": "apache::thrift::op::fromSafePatch",
  "functions": [
    {
      "refid": "namespaceapache_1_1thrift_1_1op_1a27d1e7c0cbbfd21b97490e1d0c41af11",
      "prot": "public",
      "static": "no",
      "const": "no",
      "explicit": "no",
      "inline": "no",
      "virtual": "non-virtual",
      "tparams": [
        {
          "type_html": "typename T"
        },
        {
          "type_html": "typename Tag",
          "defval_html": "type::infer_tag&lt;T&gt;"
        }
      ],
      "type_html": "<code>op::patch_type</code>&lt; Tag &gt;",
      "definition_html": "op::patch_type&lt;Tag&gt; apache::thrift::op::fromSafePatch",
      "argsstring_html": "(const op::safe_patch_type&lt; Tag &gt; &amp;safePatch)",
      "name_html": "fromSafePatch",
      "param": [
        {
          "type_html": "const <code>op::safe_patch_type</code>&lt; Tag &gt; &amp;",
          "declname_html": "safePatch"
        }
      ],
      "location": {
        "file": "fbcode/thrift/lib/cpp2/op/Patch.h",
        "line": "159",
        "column": "16",
        "bodyfile": "fbcode/thrift/lib/cpp2/op/Patch.h",
        "bodystart": "159",
        "bodyend": "172"
      },
      "definition": {
        "simple_html": "template &lt;typename T, typename Tag = type::infer_tag&lt;T&gt;&gt;\nop::patch_type&lt;Tag&gt; fromSafePatch(const op::safe_patch_type&lt;Tag&gt;&amp; safePatch)",
        "simple_raw": "template <typename T, typename Tag = type::infer_tag<T>>\nop::patch_type<Tag> fromSafePatch(const op::safe_patch_type<Tag>& safePatch)",
        "detailed_html": "template &lt;typename T, typename Tag = type::infer_tag&lt;T&gt;&gt;\nop::patch_type&lt;Tag&gt; fromSafePatch(const op::safe_patch_type&lt;Tag&gt;&amp; safePatch)",
        "detailed_raw": "template <typename T, typename Tag = type::infer_tag<T>>\nop::patch_type<Tag> fromSafePatch(const op::safe_patch_type<Tag>& safePatch)",
        "original_definition_html": "op::patch_type&lt;Tag&gt; apache::thrift::op::fromSafePatch",
        "original_argsstring_html": "(const op::safe_patch_type&lt; Tag &gt; &amp;safePatch)"
      },
      "description": {
        "exception": [
          {
            "names_html": [
              "std::runtime_error"
            ],
            "description_html": "<p>if the given <code>SafePatch</code> cannot be successfully decoded or safely applied in this process (eg. if the version of the Thrift Patch library in this process is not compatible with the minimum version required by <code>SafePatch</code>). </p>"
          }
        ],
        "detailed_html": "<p>Returns a Thrift Patch instance corresponding to the (decoded) <code>SafePatch</code>.</p>\n<p>\n</p>"
      },
      "compoundname_html": "apache::thrift::op::fromSafePatch",
      "namespace_html": "apache::thrift::op"
    }
  ],
  "filepath": "f/assoc/file/thrift/lib/cpp2/op/Patch.h/fromSafePatch",
  "namespace_html": "apache::thrift::op",
  "minprot": "public",
  "displayname_html": "fromSafePatch",
  "brief_html": "<p>Returns a Thrift Patch instance corresponding to the (decoded) <code>SafePatch</code>.</p>\n",
  "groupname_html": "",
  "href": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Patch.h/fromSafePatch",
  "refid": "/ref/cpp/f/assoc/file/thrift/lib/cpp2/op/Patch.h/fromSafePatch"
}