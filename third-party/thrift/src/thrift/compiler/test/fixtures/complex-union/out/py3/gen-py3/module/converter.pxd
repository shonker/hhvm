#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/complex-union/src/module.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from libcpp.memory cimport shared_ptr

cimport module.types as _fbthrift_ctypes


cdef shared_ptr[_fbthrift_ctypes.cComplexUnion] ComplexUnion_convert_to_cpp(object inst) except*
cdef object ComplexUnion_from_cpp(const shared_ptr[_fbthrift_ctypes.cComplexUnion]& c_struct)

cdef shared_ptr[_fbthrift_ctypes.cListUnion] ListUnion_convert_to_cpp(object inst) except*
cdef object ListUnion_from_cpp(const shared_ptr[_fbthrift_ctypes.cListUnion]& c_struct)

cdef shared_ptr[_fbthrift_ctypes.cDataUnion] DataUnion_convert_to_cpp(object inst) except*
cdef object DataUnion_from_cpp(const shared_ptr[_fbthrift_ctypes.cDataUnion]& c_struct)

cdef shared_ptr[_fbthrift_ctypes.cVal] Val_convert_to_cpp(object inst) except*
cdef object Val_from_cpp(const shared_ptr[_fbthrift_ctypes.cVal]& c_struct)

cdef shared_ptr[_fbthrift_ctypes.cValUnion] ValUnion_convert_to_cpp(object inst) except*
cdef object ValUnion_from_cpp(const shared_ptr[_fbthrift_ctypes.cValUnion]& c_struct)

cdef shared_ptr[_fbthrift_ctypes.cVirtualComplexUnion] VirtualComplexUnion_convert_to_cpp(object inst) except*
cdef object VirtualComplexUnion_from_cpp(const shared_ptr[_fbthrift_ctypes.cVirtualComplexUnion]& c_struct)

cdef shared_ptr[_fbthrift_ctypes.cNonCopyableStruct] NonCopyableStruct_convert_to_cpp(object inst) except*
cdef object NonCopyableStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cNonCopyableStruct]& c_struct)

cdef shared_ptr[_fbthrift_ctypes.cNonCopyableUnion] NonCopyableUnion_convert_to_cpp(object inst) except*
cdef object NonCopyableUnion_from_cpp(const shared_ptr[_fbthrift_ctypes.cNonCopyableUnion]& c_struct)

