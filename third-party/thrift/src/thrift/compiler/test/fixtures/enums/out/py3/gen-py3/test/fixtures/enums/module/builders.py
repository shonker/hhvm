#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/enums/src/module.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#
import typing as _typing

import folly.iobuf as _fbthrift_iobuf
import thrift.py3.builder


import test.fixtures.enums.module.types as _test_fixtures_enums_module_types


_fbthrift_struct_type__SomeStruct = _test_fixtures_enums_module_types.SomeStruct
class SomeStruct_Builder(thrift.py3.builder.StructBuilder):
    _struct_type = _fbthrift_struct_type__SomeStruct

    def __init__(self):
        self.reasonable: _typing.Optional[_test_fixtures_enums_module_types.Metasyntactic] = None
        self.fine: _typing.Optional[_test_fixtures_enums_module_types.Metasyntactic] = None
        self.questionable: _typing.Optional[_test_fixtures_enums_module_types.Metasyntactic] = None
        self.tags: _typing.Optional[set] = None

    def __iter__(self):
        yield "reasonable", self.reasonable
        yield "fine", self.fine
        yield "questionable", self.questionable
        yield "tags", self.tags

_fbthrift_struct_type__MyStruct = _test_fixtures_enums_module_types.MyStruct
class MyStruct_Builder(thrift.py3.builder.StructBuilder):
    _struct_type = _fbthrift_struct_type__MyStruct

    def __init__(self):
        self.me2_3: _typing.Optional[_test_fixtures_enums_module_types.MyEnum2] = None
        self.me3_n3: _typing.Optional[_test_fixtures_enums_module_types.MyEnum3] = None
        self.me1_t1: _typing.Optional[_test_fixtures_enums_module_types.MyEnum1] = None
        self.me1_t2: _typing.Optional[_test_fixtures_enums_module_types.MyEnum1] = None

    def __iter__(self):
        yield "me2_3", self.me2_3
        yield "me3_n3", self.me3_n3
        yield "me1_t1", self.me1_t1
        yield "me1_t2", self.me1_t2

