
#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from thrift.python.capi.cpp_converter cimport cpp_to_python, python_to_cpp
from libcpp.utility cimport move as cmove

cdef extern from "thrift/compiler/test/fixtures/python_capi/gen-python-capi/containers/thrift_types_capi.h":
    pass

cdef cTemplateLists TemplateLists_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cTemplateLists](inst))

cdef object TemplateLists_from_cpp(const cTemplateLists& c_struct):
    return cpp_to_python[cTemplateLists](c_struct)

cdef cTemplateSets TemplateSets_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cTemplateSets](inst))

cdef object TemplateSets_from_cpp(const cTemplateSets& c_struct):
    return cpp_to_python[cTemplateSets](c_struct)

cdef cTemplateMaps TemplateMaps_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cTemplateMaps](inst))

cdef object TemplateMaps_from_cpp(const cTemplateMaps& c_struct):
    return cpp_to_python[cTemplateMaps](c_struct)

cdef cTWrapped TWrapped_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cTWrapped](inst))

cdef object TWrapped_from_cpp(const cTWrapped& c_struct):
    return cpp_to_python[cTWrapped](c_struct)

cdef cIndirectionA IndirectionA_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cIndirectionA](inst))

cdef object IndirectionA_from_cpp(const cIndirectionA& c_struct):
    return cpp_to_python[cIndirectionA](c_struct)

cdef cIndirectionB IndirectionB_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cIndirectionB](inst))

cdef object IndirectionB_from_cpp(const cIndirectionB& c_struct):
    return cpp_to_python[cIndirectionB](c_struct)

cdef cIndirectionC IndirectionC_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cIndirectionC](inst))

cdef object IndirectionC_from_cpp(const cIndirectionC& c_struct):
    return cpp_to_python[cIndirectionC](c_struct)

