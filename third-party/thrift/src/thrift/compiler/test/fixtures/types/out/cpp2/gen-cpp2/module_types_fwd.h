/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/types/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */
#pragma once

#include <cstdint>

// BEGIN forward_declare
namespace apache::thrift::fixtures::types {
class empty_struct;
class decorated_struct;
class ContainerStruct;
class CppTypeStruct;
class VirtualStruct;
class MyStructWithForwardRefEnum;
class TrivialNumeric;
class TrivialNestedWithDefault;
class ComplexString;
class ComplexNestedWithDefault;
class MinPadding;
class MinPaddingWithCustomType;
class MyStruct;
class MyDataItem;
class Renamed;
class AnnotatedTypes;
class ForwardUsageRoot;
class ForwardUsageStruct;
class ForwardUsageByRef;
class IncompleteMap;
class IncompleteMapDep;
class CompleteMap;
class CompleteMapDep;
class IncompleteList;
class IncompleteListDep;
class CompleteList;
class CompleteListDep;
class AdaptedList;
namespace detail {
class AdaptedListDep;
} // namespace detail
class DependentAdaptedList;
namespace detail {
class DependentAdaptedListDep;
} // namespace detail
class AllocatorAware;
class AllocatorAware2;
class TypedefStruct;
class StructWithDoubleUnderscores;
} // namespace apache::thrift::fixtures::types
// END forward_declare

// BEGIN forward_declare_enums
namespace apache::thrift::fixtures::types {
enum class has_bitwise_ops;
enum is_unscoped : int;
enum class MyForwardRefEnum;
} // namespace apache::thrift::fixtures::types
// END forward_declare_enums
