
#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/mcpp2-compare/src/module.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#



cdef shared_ptr[_fbthrift_ctypes.cEmpty] Empty_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.Empty?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object Empty_from_cpp(const shared_ptr[_fbthrift_ctypes.cEmpty]& c_struct):
    return _fbthrift_ctypes.Empty._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cASimpleStruct] ASimpleStruct_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.ASimpleStruct?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object ASimpleStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cASimpleStruct]& c_struct):
    return _fbthrift_ctypes.ASimpleStruct._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cASimpleStructNoexcept] ASimpleStructNoexcept_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.ASimpleStructNoexcept?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object ASimpleStructNoexcept_from_cpp(const shared_ptr[_fbthrift_ctypes.cASimpleStructNoexcept]& c_struct):
    return _fbthrift_ctypes.ASimpleStructNoexcept._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cMyStruct] MyStruct_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.MyStruct?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object MyStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cMyStruct]& c_struct):
    return _fbthrift_ctypes.MyStruct._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cSimpleUnion] SimpleUnion_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.SimpleUnion?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object SimpleUnion_from_cpp(const shared_ptr[_fbthrift_ctypes.cSimpleUnion]& c_struct):
    return _fbthrift_ctypes.SimpleUnion._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cComplexUnion] ComplexUnion_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.ComplexUnion?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object ComplexUnion_from_cpp(const shared_ptr[_fbthrift_ctypes.cComplexUnion]& c_struct):
    return _fbthrift_ctypes.ComplexUnion._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cAnException] AnException_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.AnException?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object AnException_from_cpp(const shared_ptr[_fbthrift_ctypes.cAnException]& c_struct):
    return _fbthrift_ctypes.AnException._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cAnotherException] AnotherException_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.AnotherException?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object AnotherException_from_cpp(const shared_ptr[_fbthrift_ctypes.cAnotherException]& c_struct):
    return _fbthrift_ctypes.AnotherException._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.ccontainerStruct] containerStruct_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.containerStruct?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object containerStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.ccontainerStruct]& c_struct):
    return _fbthrift_ctypes.containerStruct._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cMyIncludedStruct] MyIncludedStruct_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.MyIncludedStruct?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object MyIncludedStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cMyIncludedStruct]& c_struct):
    return _fbthrift_ctypes.MyIncludedStruct._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cAnnotatedStruct] AnnotatedStruct_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.AnnotatedStruct?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object AnnotatedStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cAnnotatedStruct]& c_struct):
    return _fbthrift_ctypes.AnnotatedStruct._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cComplexContainerStruct] ComplexContainerStruct_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.ComplexContainerStruct?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object ComplexContainerStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cComplexContainerStruct]& c_struct):
    return _fbthrift_ctypes.ComplexContainerStruct._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cFloatStruct] FloatStruct_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.FloatStruct?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object FloatStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cFloatStruct]& c_struct):
    return _fbthrift_ctypes.FloatStruct._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cFloatUnion] FloatUnion_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.FloatUnion?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object FloatUnion_from_cpp(const shared_ptr[_fbthrift_ctypes.cFloatUnion]& c_struct):
    return _fbthrift_ctypes.FloatUnion._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
cdef shared_ptr[_fbthrift_ctypes.cAllRequiredNoExceptMoveCtrStruct] AllRequiredNoExceptMoveCtrStruct_convert_to_cpp(object inst) except*:
    return (<_fbthrift_ctypes.AllRequiredNoExceptMoveCtrStruct?>inst)._cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE


cdef object AllRequiredNoExceptMoveCtrStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cAllRequiredNoExceptMoveCtrStruct]& c_struct):
    return _fbthrift_ctypes.AllRequiredNoExceptMoveCtrStruct._create_FBTHRIFT_ONLY_DO_NOT_USE(c_struct)
