/**
 * Autogenerated by Thrift for thrift/compiler/test/fixtures/adapter/src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "thrift/compiler/test/fixtures/adapter/gen-cpp2/module_data.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

FOLLY_CLANG_DISABLE_WARNING("-Wunused-macros")

#if defined(__GNUC__) && defined(__linux__) && !FOLLY_MOBILE
// These attributes are applied to the static data members to ensure that they
// are not stripped from the compiled binary, in order to keep them available
// for use by debuggers at runtime.
//
// The "used" attribute is required to ensure the compiler always emits unused
// data.
//
// The "section" attribute is required to stop the linker from stripping used
// data. It works by forcing all of the data members (both used and unused ones)
// into the same section. As the linker strips data on a per-section basis, it
// is then unable to remove unused data without also removing used data.
// This has a similar effect to the "retain" attribute, but works with older
// toolchains.
#define THRIFT_DATA_MEMBER [[gnu::used]] [[gnu::section(".rodata.thrift.data")]]
#else
#define THRIFT_DATA_MEMBER
#endif

namespace apache {
namespace thrift {

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::MyAnnotation>::name = "MyAnnotation";
THRIFT_DATA_MEMBER const std::array<std::string_view, 2> TStructDataStorage<::facebook::thrift::test::MyAnnotation>::fields_names = { {
  "signature"sv,
  "color"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 2> TStructDataStorage<::facebook::thrift::test::MyAnnotation>::fields_ids = { {
  1,
  2,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 2> TStructDataStorage<::facebook::thrift::test::MyAnnotation>::fields_types = { {
  TType::T_STRING,
  TType::T_I32,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 2> TStructDataStorage<::facebook::thrift::test::MyAnnotation>::storage_names = { {
  "__fbthrift_field_signature"sv,
  "__fbthrift_field_color"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 2> TStructDataStorage<::facebook::thrift::test::MyAnnotation>::isset_indexes = { {
  0,
  1,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::Foo>::name = "Foo";
THRIFT_DATA_MEMBER const std::array<std::string_view, 11> TStructDataStorage<::facebook::thrift::test::Foo>::fields_names = { {
  "intField"sv,
  "optionalIntField"sv,
  "intFieldWithDefault"sv,
  "setField"sv,
  "optionalSetField"sv,
  "mapField"sv,
  "optionalMapField"sv,
  "binaryField"sv,
  "longField"sv,
  "adaptedLongField"sv,
  "doubleAdaptedField"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 11> TStructDataStorage<::facebook::thrift::test::Foo>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 11> TStructDataStorage<::facebook::thrift::test::Foo>::fields_types = { {
  TType::T_I32,
  TType::T_I32,
  TType::T_I32,
  TType::T_SET,
  TType::T_SET,
  TType::T_MAP,
  TType::T_MAP,
  TType::T_STRING,
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 11> TStructDataStorage<::facebook::thrift::test::Foo>::storage_names = { {
  "__fbthrift_field_intField"sv,
  "__fbthrift_field_optionalIntField"sv,
  "__fbthrift_field_intFieldWithDefault"sv,
  "__fbthrift_field_setField"sv,
  "__fbthrift_field_optionalSetField"sv,
  "__fbthrift_field_mapField"sv,
  "__fbthrift_field_optionalMapField"sv,
  "__fbthrift_field_binaryField"sv,
  "__fbthrift_field_longField"sv,
  "__fbthrift_field_adaptedLongField"sv,
  "__fbthrift_field_doubleAdaptedField"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 11> TStructDataStorage<::facebook::thrift::test::Foo>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::Baz>::name = "Baz";
THRIFT_DATA_MEMBER const std::array<std::string_view, 5> TStructDataStorage<::facebook::thrift::test::Baz>::fields_names = { {
  "intField"sv,
  "setField"sv,
  "mapField"sv,
  "binaryField"sv,
  "longField"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 5> TStructDataStorage<::facebook::thrift::test::Baz>::fields_ids = { {
  1,
  4,
  6,
  8,
  9,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 5> TStructDataStorage<::facebook::thrift::test::Baz>::fields_types = { {
  TType::T_I32,
  TType::T_SET,
  TType::T_MAP,
  TType::T_STRING,
  TType::T_I64,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 5> TStructDataStorage<::facebook::thrift::test::Baz>::storage_names = { {
  "intField"sv,
  "setField"sv,
  "mapField"sv,
  "binaryField"sv,
  "longField"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 5> TStructDataStorage<::facebook::thrift::test::Baz>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::Bar>::name = "Bar";
THRIFT_DATA_MEMBER const std::array<std::string_view, 7> TStructDataStorage<::facebook::thrift::test::Bar>::fields_names = { {
  "structField"sv,
  "optionalStructField"sv,
  "structListField"sv,
  "optionalStructListField"sv,
  "unionField"sv,
  "optionalUnionField"sv,
  "adaptedStructField"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 7> TStructDataStorage<::facebook::thrift::test::Bar>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 7> TStructDataStorage<::facebook::thrift::test::Bar>::fields_types = { {
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_LIST,
  TType::T_LIST,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 7> TStructDataStorage<::facebook::thrift::test::Bar>::storage_names = { {
  "__fbthrift_field_structField"sv,
  "__fbthrift_field_optionalStructField"sv,
  "__fbthrift_field_structListField"sv,
  "__fbthrift_field_optionalStructListField"sv,
  "__fbthrift_field_unionField"sv,
  "__fbthrift_field_optionalUnionField"sv,
  "__fbthrift_field_adaptedStructField"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 7> TStructDataStorage<::facebook::thrift::test::Bar>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdapted>::name = "DirectlyAdapted";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdapted>::fields_names = { {
  "field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdapted>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdapted>::fields_types = { {
  TType::T_I32,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdapted>::storage_names = { {
  "__fbthrift_field_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdapted>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::detail::IndependentDirectlyAdapted>::name = "IndependentDirectlyAdapted";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::detail::IndependentDirectlyAdapted>::fields_names = { {
  "field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::detail::IndependentDirectlyAdapted>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::detail::IndependentDirectlyAdapted>::fields_types = { {
  TType::T_I32,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::detail::IndependentDirectlyAdapted>::storage_names = { {
  "__fbthrift_field_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::detail::IndependentDirectlyAdapted>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::StructWithFieldAdapter>::name = "StructWithFieldAdapter";
THRIFT_DATA_MEMBER const std::array<std::string_view, 4> TStructDataStorage<::facebook::thrift::test::StructWithFieldAdapter>::fields_names = { {
  "field"sv,
  "shared_field"sv,
  "opt_shared_field"sv,
  "opt_boxed_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 4> TStructDataStorage<::facebook::thrift::test::StructWithFieldAdapter>::fields_ids = { {
  1,
  2,
  3,
  4,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 4> TStructDataStorage<::facebook::thrift::test::StructWithFieldAdapter>::fields_types = { {
  TType::T_I32,
  TType::T_I32,
  TType::T_I32,
  TType::T_I32,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 4> TStructDataStorage<::facebook::thrift::test::StructWithFieldAdapter>::storage_names = { {
  "__fbthrift_field_field"sv,
  "__fbthrift_field_shared_field"sv,
  "__fbthrift_field_opt_shared_field"sv,
  "__fbthrift_field_opt_boxed_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 4> TStructDataStorage<::facebook::thrift::test::StructWithFieldAdapter>::isset_indexes = { {
  0,
  -1,
  -1,
  -1,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::TerseAdaptedFields>::name = "TerseAdaptedFields";
THRIFT_DATA_MEMBER const std::array<std::string_view, 3> TStructDataStorage<::facebook::thrift::test::TerseAdaptedFields>::fields_names = { {
  "int_field"sv,
  "string_field"sv,
  "set_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 3> TStructDataStorage<::facebook::thrift::test::TerseAdaptedFields>::fields_ids = { {
  1,
  2,
  3,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 3> TStructDataStorage<::facebook::thrift::test::TerseAdaptedFields>::fields_types = { {
  TType::T_I32,
  TType::T_STRING,
  TType::T_SET,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 3> TStructDataStorage<::facebook::thrift::test::TerseAdaptedFields>::storage_names = { {
  "__fbthrift_field_int_field"sv,
  "__fbthrift_field_string_field"sv,
  "__fbthrift_field_set_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 3> TStructDataStorage<::facebook::thrift::test::TerseAdaptedFields>::isset_indexes = { {
  -1,
  -1,
  -1,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::B>::name = "B";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::B>::fields_names = { {
  "a"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::B>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::B>::fields_types = { {
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::B>::storage_names = { {
  "__fbthrift_field_a"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::B>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::A>::name = "A";
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::facebook::thrift::test::A>::fields_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 0> TStructDataStorage<::facebook::thrift::test::A>::fields_ids = { {
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 0> TStructDataStorage<::facebook::thrift::test::A>::fields_types = { {
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::facebook::thrift::test::A>::storage_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int, 0> TStructDataStorage<::facebook::thrift::test::A>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::Config>::name = "Config";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::Config>::fields_names = { {
  "path"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::Config>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::Config>::fields_types = { {
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::Config>::storage_names = { {
  "__fbthrift_field_path"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::Config>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::MyStruct>::name = "MyStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 2> TStructDataStorage<::facebook::thrift::test::MyStruct>::fields_names = { {
  "field"sv,
  "set_string"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 2> TStructDataStorage<::facebook::thrift::test::MyStruct>::fields_ids = { {
  1,
  2,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 2> TStructDataStorage<::facebook::thrift::test::MyStruct>::fields_types = { {
  TType::T_I32,
  TType::T_SET,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 2> TStructDataStorage<::facebook::thrift::test::MyStruct>::storage_names = { {
  "__fbthrift_field_field"sv,
  "__fbthrift_field_set_string"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 2> TStructDataStorage<::facebook::thrift::test::MyStruct>::isset_indexes = { {
  0,
  1,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::AdaptTestStruct>::name = "AdaptTestStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 10> TStructDataStorage<::facebook::thrift::test::AdaptTestStruct>::fields_names = { {
  "delay"sv,
  "custom"sv,
  "timeout"sv,
  "data"sv,
  "meta"sv,
  "indirectionString"sv,
  "string_data"sv,
  "double_wrapped_bool"sv,
  "double_wrapped_integer"sv,
  "binary_data"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 10> TStructDataStorage<::facebook::thrift::test::AdaptTestStruct>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 10> TStructDataStorage<::facebook::thrift::test::AdaptTestStruct>::fields_types = { {
  TType::T_I64,
  TType::T_STRING,
  TType::T_I64,
  TType::T_I64,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_BOOL,
  TType::T_I32,
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 10> TStructDataStorage<::facebook::thrift::test::AdaptTestStruct>::storage_names = { {
  "__fbthrift_field_delay"sv,
  "__fbthrift_field_custom"sv,
  "__fbthrift_field_timeout"sv,
  "__fbthrift_field_data"sv,
  "__fbthrift_field_meta"sv,
  "__fbthrift_field_indirectionString"sv,
  "__fbthrift_field_string_data"sv,
  "__fbthrift_field_double_wrapped_bool"sv,
  "__fbthrift_field_double_wrapped_integer"sv,
  "__fbthrift_field_binary_data"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 10> TStructDataStorage<::facebook::thrift::test::AdaptTestStruct>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::AdaptTemplatedTestStruct>::name = "AdaptTemplatedTestStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 22> TStructDataStorage<::facebook::thrift::test::AdaptTemplatedTestStruct>::fields_names = { {
  "adaptedBool"sv,
  "adaptedByte"sv,
  "adaptedShort"sv,
  "adaptedInteger"sv,
  "adaptedLong"sv,
  "adaptedDouble"sv,
  "adaptedString"sv,
  "adaptedList"sv,
  "adaptedSet"sv,
  "adaptedMap"sv,
  "adaptedBoolDefault"sv,
  "adaptedByteDefault"sv,
  "adaptedShortDefault"sv,
  "adaptedIntegerDefault"sv,
  "adaptedLongDefault"sv,
  "adaptedDoubleDefault"sv,
  "adaptedStringDefault"sv,
  "adaptedEnum"sv,
  "adaptedListDefault"sv,
  "adaptedSetDefault"sv,
  "adaptedMapDefault"sv,
  "doubleTypedefBool"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 22> TStructDataStorage<::facebook::thrift::test::AdaptTemplatedTestStruct>::fields_ids = { {
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 22> TStructDataStorage<::facebook::thrift::test::AdaptTemplatedTestStruct>::fields_types = { {
  TType::T_BOOL,
  TType::T_BYTE,
  TType::T_I16,
  TType::T_I32,
  TType::T_I64,
  TType::T_DOUBLE,
  TType::T_STRING,
  TType::T_LIST,
  TType::T_SET,
  TType::T_MAP,
  TType::T_BOOL,
  TType::T_BYTE,
  TType::T_I16,
  TType::T_I32,
  TType::T_I64,
  TType::T_DOUBLE,
  TType::T_STRING,
  TType::T_I32,
  TType::T_LIST,
  TType::T_SET,
  TType::T_MAP,
  TType::T_BOOL,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 22> TStructDataStorage<::facebook::thrift::test::AdaptTemplatedTestStruct>::storage_names = { {
  "__fbthrift_field_adaptedBool"sv,
  "__fbthrift_field_adaptedByte"sv,
  "__fbthrift_field_adaptedShort"sv,
  "__fbthrift_field_adaptedInteger"sv,
  "__fbthrift_field_adaptedLong"sv,
  "__fbthrift_field_adaptedDouble"sv,
  "__fbthrift_field_adaptedString"sv,
  "__fbthrift_field_adaptedList"sv,
  "__fbthrift_field_adaptedSet"sv,
  "__fbthrift_field_adaptedMap"sv,
  "__fbthrift_field_adaptedBoolDefault"sv,
  "__fbthrift_field_adaptedByteDefault"sv,
  "__fbthrift_field_adaptedShortDefault"sv,
  "__fbthrift_field_adaptedIntegerDefault"sv,
  "__fbthrift_field_adaptedLongDefault"sv,
  "__fbthrift_field_adaptedDoubleDefault"sv,
  "__fbthrift_field_adaptedStringDefault"sv,
  "__fbthrift_field_adaptedEnum"sv,
  "__fbthrift_field_adaptedListDefault"sv,
  "__fbthrift_field_adaptedSetDefault"sv,
  "__fbthrift_field_adaptedMapDefault"sv,
  "__fbthrift_field_doubleTypedefBool"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 22> TStructDataStorage<::facebook::thrift::test::AdaptTemplatedTestStruct>::isset_indexes = { {
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::AdaptTemplatedNestedTestStruct>::name = "AdaptTemplatedNestedTestStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::AdaptTemplatedNestedTestStruct>::fields_names = { {
  "adaptedStruct"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::AdaptTemplatedNestedTestStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::AdaptTemplatedNestedTestStruct>::fields_types = { {
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::AdaptTemplatedNestedTestStruct>::storage_names = { {
  "__fbthrift_field_adaptedStruct"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::AdaptTemplatedNestedTestStruct>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::ThriftAdaptTestUnion>::name = "AdaptTestUnion";
THRIFT_DATA_MEMBER const std::array<std::string_view, 2> TStructDataStorage<::facebook::thrift::test::ThriftAdaptTestUnion>::fields_names = { {
  "delay"sv,
  "custom"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 2> TStructDataStorage<::facebook::thrift::test::ThriftAdaptTestUnion>::fields_ids = { {
  1,
  2,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 2> TStructDataStorage<::facebook::thrift::test::ThriftAdaptTestUnion>::fields_types = { {
  TType::T_I64,
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 2> TStructDataStorage<::facebook::thrift::test::ThriftAdaptTestUnion>::storage_names = { {
  "delay"sv,
  "custom"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 2> TStructDataStorage<::facebook::thrift::test::ThriftAdaptTestUnion>::isset_indexes = { {
  0,
  1,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::ThriftAdaptedStruct>::name = "AdaptedStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::ThriftAdaptedStruct>::fields_names = { {
  "data"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::ThriftAdaptedStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::ThriftAdaptedStruct>::fields_types = { {
  TType::T_I64,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::ThriftAdaptedStruct>::storage_names = { {
  "__fbthrift_field_data"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::ThriftAdaptedStruct>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdaptedStruct>::name = "DirectlyAdaptedStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdaptedStruct>::fields_names = { {
  "data"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdaptedStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdaptedStruct>::fields_types = { {
  TType::T_I64,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdaptedStruct>::storage_names = { {
  "__fbthrift_field_data"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::detail::DirectlyAdaptedStruct>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::StructFieldAdaptedStruct>::name = "StructFieldAdaptedStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 4> TStructDataStorage<::facebook::thrift::test::StructFieldAdaptedStruct>::fields_names = { {
  "adaptedStruct"sv,
  "adaptedTypedef"sv,
  "directlyAdapted"sv,
  "typedefOfAdapted"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 4> TStructDataStorage<::facebook::thrift::test::StructFieldAdaptedStruct>::fields_ids = { {
  1,
  2,
  3,
  4,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 4> TStructDataStorage<::facebook::thrift::test::StructFieldAdaptedStruct>::fields_types = { {
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 4> TStructDataStorage<::facebook::thrift::test::StructFieldAdaptedStruct>::storage_names = { {
  "__fbthrift_field_adaptedStruct"sv,
  "__fbthrift_field_adaptedTypedef"sv,
  "__fbthrift_field_directlyAdapted"sv,
  "__fbthrift_field_typedefOfAdapted"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 4> TStructDataStorage<::facebook::thrift::test::StructFieldAdaptedStruct>::isset_indexes = { {
  0,
  1,
  2,
  3,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::CircularAdaptee>::name = "CircularAdaptee";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::CircularAdaptee>::fields_names = { {
  "field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::CircularAdaptee>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::CircularAdaptee>::fields_types = { {
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::CircularAdaptee>::storage_names = { {
  "__fbthrift_field_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::CircularAdaptee>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::CircularStruct>::name = "CircularStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::CircularStruct>::fields_names = { {
  "field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::CircularStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::CircularStruct>::fields_types = { {
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::CircularStruct>::storage_names = { {
  "__fbthrift_field_field"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::CircularStruct>::isset_indexes = { {
  -1,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::ReorderedStruct>::name = "ReorderedStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::ReorderedStruct>::fields_names = { {
  "reordered_dependent_adapted"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::ReorderedStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::ReorderedStruct>::fields_types = { {
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::ReorderedStruct>::storage_names = { {
  "__fbthrift_field_reordered_dependent_adapted"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::ReorderedStruct>::isset_indexes = { {
  -1,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::detail::DeclaredAfterStruct>::name = "DeclaredAfterStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::facebook::thrift::test::detail::DeclaredAfterStruct>::fields_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 0> TStructDataStorage<::facebook::thrift::test::detail::DeclaredAfterStruct>::fields_ids = { {
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 0> TStructDataStorage<::facebook::thrift::test::detail::DeclaredAfterStruct>::fields_types = { {
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::facebook::thrift::test::detail::DeclaredAfterStruct>::storage_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int, 0> TStructDataStorage<::facebook::thrift::test::detail::DeclaredAfterStruct>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::UnderlyingRenamedStruct>::name = "RenamedStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::UnderlyingRenamedStruct>::fields_names = { {
  "data"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::UnderlyingRenamedStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::UnderlyingRenamedStruct>::fields_types = { {
  TType::T_I64,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::UnderlyingRenamedStruct>::storage_names = { {
  "__fbthrift_field_data"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::UnderlyingRenamedStruct>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::UnderlyingSameNamespaceStruct>::name = "SameNamespaceStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::UnderlyingSameNamespaceStruct>::fields_names = { {
  "data"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::UnderlyingSameNamespaceStruct>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::UnderlyingSameNamespaceStruct>::fields_types = { {
  TType::T_I64,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::UnderlyingSameNamespaceStruct>::storage_names = { {
  "__fbthrift_field_data"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::UnderlyingSameNamespaceStruct>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::detail::HeapAllocated>::name = "HeapAllocated";
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::facebook::thrift::test::detail::HeapAllocated>::fields_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 0> TStructDataStorage<::facebook::thrift::test::detail::HeapAllocated>::fields_ids = { {
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 0> TStructDataStorage<::facebook::thrift::test::detail::HeapAllocated>::fields_types = { {
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::facebook::thrift::test::detail::HeapAllocated>::storage_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int, 0> TStructDataStorage<::facebook::thrift::test::detail::HeapAllocated>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::MoveOnly>::name = "MoveOnly";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::MoveOnly>::fields_names = { {
  "ptr"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::MoveOnly>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::MoveOnly>::fields_types = { {
  TType::T_STRUCT,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::MoveOnly>::storage_names = { {
  "__fbthrift_field_ptr"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::MoveOnly>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::AlsoMoveOnly>::name = "AlsoMoveOnly";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::AlsoMoveOnly>::fields_names = { {
  "ptr"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::AlsoMoveOnly>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::AlsoMoveOnly>::fields_types = { {
  TType::T_I64,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::AlsoMoveOnly>::storage_names = { {
  "__fbthrift_field_ptr"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::AlsoMoveOnly>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::ApplyAdapter>::name = "ApplyAdapter";
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::facebook::thrift::test::ApplyAdapter>::fields_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 0> TStructDataStorage<::facebook::thrift::test::ApplyAdapter>::fields_ids = { {
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 0> TStructDataStorage<::facebook::thrift::test::ApplyAdapter>::fields_types = { {
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::facebook::thrift::test::ApplyAdapter>::storage_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int, 0> TStructDataStorage<::facebook::thrift::test::ApplyAdapter>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::detail::TransitiveAdapted>::name = "TransitiveAdapted";
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::facebook::thrift::test::detail::TransitiveAdapted>::fields_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 0> TStructDataStorage<::facebook::thrift::test::detail::TransitiveAdapted>::fields_ids = { {
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 0> TStructDataStorage<::facebook::thrift::test::detail::TransitiveAdapted>::fields_types = { {
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 0> TStructDataStorage<::facebook::thrift::test::detail::TransitiveAdapted>::storage_names = { {
}};
THRIFT_DATA_MEMBER const std::array<int, 0> TStructDataStorage<::facebook::thrift::test::detail::TransitiveAdapted>::isset_indexes = { {
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::CountingStruct>::name = "CountingStruct";
THRIFT_DATA_MEMBER const std::array<std::string_view, 3> TStructDataStorage<::facebook::thrift::test::CountingStruct>::fields_names = { {
  "regularInt"sv,
  "countingInt"sv,
  "regularString"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 3> TStructDataStorage<::facebook::thrift::test::CountingStruct>::fields_ids = { {
  1,
  2,
  3,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 3> TStructDataStorage<::facebook::thrift::test::CountingStruct>::fields_types = { {
  TType::T_I64,
  TType::T_I64,
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 3> TStructDataStorage<::facebook::thrift::test::CountingStruct>::storage_names = { {
  "__fbthrift_field_regularInt"sv,
  "__fbthrift_field_countingInt"sv,
  "__fbthrift_field_regularString"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 3> TStructDataStorage<::facebook::thrift::test::CountingStruct>::isset_indexes = { {
  0,
  1,
  2,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::Person>::name = "Person";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::Person>::fields_names = { {
  "name"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::Person>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::Person>::fields_types = { {
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::Person>::storage_names = { {
  "__fbthrift_field_name"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::Person>::isset_indexes = { {
  0,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::facebook::thrift::test::Person2>::name = "Person2";
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::Person2>::fields_names = { {
  "name"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 1> TStructDataStorage<::facebook::thrift::test::Person2>::fields_ids = { {
  1,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 1> TStructDataStorage<::facebook::thrift::test::Person2>::fields_types = { {
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<std::string_view, 1> TStructDataStorage<::facebook::thrift::test::Person2>::storage_names = { {
  "__fbthrift_field_name"sv,
}};
THRIFT_DATA_MEMBER const std::array<int, 1> TStructDataStorage<::facebook::thrift::test::Person2>::isset_indexes = { {
  0,
}};

} // namespace thrift
} // namespace apache
