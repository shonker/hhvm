
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT
 *  @generated
 *
 */

#pragma once

#include <thrift/lib/python/capi/constructor.h>
#include <thrift/lib/python/capi/extractor.h>

#include <thrift/compiler/test/fixtures/inject_metadata_fields/gen-cpp2/module_types.h>

namespace apache {
namespace thrift {
namespace python {
namespace capi {
template <>
struct Extractor<::cpp2::Fields>
    : public BaseExtractor<::cpp2::Fields> {
  static const bool kUsingMarshal = true;
  ExtractorResult<::cpp2::Fields> operator()(PyObject* obj);
  int typeCheck(PyObject* obj);
};

template <>
struct Extractor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Fields>>
    : public BaseExtractor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Fields>> {
  ExtractorResult<::cpp2::Fields> operator()(PyObject* obj);
};

template <>
struct Constructor<::cpp2::Fields>
    : public BaseConstructor<::cpp2::Fields> {
  static const bool kUsingMarshal = true;
  PyObject* operator()(const ::cpp2::Fields& val);
};

template <>
struct Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Fields>>
    : public BaseConstructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Fields>> {
  PyObject* operator()(const ::cpp2::Fields& val);
};

template <>
struct Extractor<::cpp2::FieldsInjectedToEmptyStruct>
    : public BaseExtractor<::cpp2::FieldsInjectedToEmptyStruct> {
  static const bool kUsingMarshal = true;
  ExtractorResult<::cpp2::FieldsInjectedToEmptyStruct> operator()(PyObject* obj);
  int typeCheck(PyObject* obj);
};

template <>
struct Extractor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToEmptyStruct>>
    : public BaseExtractor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToEmptyStruct>> {
  ExtractorResult<::cpp2::FieldsInjectedToEmptyStruct> operator()(PyObject* obj);
};

template <>
struct Constructor<::cpp2::FieldsInjectedToEmptyStruct>
    : public BaseConstructor<::cpp2::FieldsInjectedToEmptyStruct> {
  static const bool kUsingMarshal = true;
  PyObject* operator()(const ::cpp2::FieldsInjectedToEmptyStruct& val);
};

template <>
struct Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToEmptyStruct>>
    : public BaseConstructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToEmptyStruct>> {
  PyObject* operator()(const ::cpp2::FieldsInjectedToEmptyStruct& val);
};

template <>
struct Extractor<::cpp2::FieldsInjectedToStruct>
    : public BaseExtractor<::cpp2::FieldsInjectedToStruct> {
  static const bool kUsingMarshal = true;
  ExtractorResult<::cpp2::FieldsInjectedToStruct> operator()(PyObject* obj);
  int typeCheck(PyObject* obj);
};

template <>
struct Extractor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToStruct>>
    : public BaseExtractor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToStruct>> {
  ExtractorResult<::cpp2::FieldsInjectedToStruct> operator()(PyObject* obj);
};

template <>
struct Constructor<::cpp2::FieldsInjectedToStruct>
    : public BaseConstructor<::cpp2::FieldsInjectedToStruct> {
  static const bool kUsingMarshal = true;
  PyObject* operator()(const ::cpp2::FieldsInjectedToStruct& val);
};

template <>
struct Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToStruct>>
    : public BaseConstructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedToStruct>> {
  PyObject* operator()(const ::cpp2::FieldsInjectedToStruct& val);
};

template <>
struct Extractor<::cpp2::FieldsInjectedWithIncludedStruct>
    : public BaseExtractor<::cpp2::FieldsInjectedWithIncludedStruct> {
  static const bool kUsingMarshal = true;
  ExtractorResult<::cpp2::FieldsInjectedWithIncludedStruct> operator()(PyObject* obj);
  int typeCheck(PyObject* obj);
};

template <>
struct Extractor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedWithIncludedStruct>>
    : public BaseExtractor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedWithIncludedStruct>> {
  ExtractorResult<::cpp2::FieldsInjectedWithIncludedStruct> operator()(PyObject* obj);
};

template <>
struct Constructor<::cpp2::FieldsInjectedWithIncludedStruct>
    : public BaseConstructor<::cpp2::FieldsInjectedWithIncludedStruct> {
  static const bool kUsingMarshal = true;
  PyObject* operator()(const ::cpp2::FieldsInjectedWithIncludedStruct& val);
};

template <>
struct Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedWithIncludedStruct>>
    : public BaseConstructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::FieldsInjectedWithIncludedStruct>> {
  PyObject* operator()(const ::cpp2::FieldsInjectedWithIncludedStruct& val);
};

} // namespace capi
} // namespace python
} // namespace thrift
} // namespace apache
