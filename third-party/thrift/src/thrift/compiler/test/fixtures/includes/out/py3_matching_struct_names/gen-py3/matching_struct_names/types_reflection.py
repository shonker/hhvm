#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/includes/src/matching_struct_names.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#


import folly.iobuf as _fbthrift_iobuf

from thrift.py3.reflection import (
    NumberType as __NumberType,
    StructType as __StructType,
    Qualifier as __Qualifier,
    StructSpec as __StructSpec,
    ListSpec as __ListSpec,
    SetSpec as __SetSpec,
    MapSpec as __MapSpec,
    FieldSpec as __FieldSpec,
)

import module.types as _module_types

import matching_struct_names.types as _matching_struct_names_types



def get_reflection__MyStruct() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="MyStruct",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="field",
            py_name="field",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__Combo() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="Combo",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="listOfOurMyStructLists",
            py_name="listOfOurMyStructLists",
            type=_matching_struct_names_types.List__List__MyStruct,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=2,
            name="theirMyStructList",
            py_name="theirMyStructList",
            type=_matching_struct_names_types.List__module_MyStruct,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=3,
            name="ourMyStructList",
            py_name="ourMyStructList",
            type=_matching_struct_names_types.List__MyStruct,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=4,
            name="listOfTheirMyStructList",
            py_name="listOfTheirMyStructList",
            type=_matching_struct_names_types.List__List__module_MyStruct,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__List__MyStruct() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_matching_struct_names_types.MyStruct,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__List__List__MyStruct() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_matching_struct_names_types.List__MyStruct,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__List__module_MyStruct() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_module_types.MyStruct,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__List__List__module_MyStruct() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_matching_struct_names_types.List__module_MyStruct,
        kind=__NumberType.NOT_A_NUMBER,
    )

