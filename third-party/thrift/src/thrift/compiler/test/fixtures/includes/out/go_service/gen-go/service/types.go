// Autogenerated by Thrift for thrift/compiler/test/fixtures/includes/src/service.thrift
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//  @generated

package service

import (
    "fmt"
    "strings"

    module "module"
    includes "includes"
    thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift"
)

var _ = module.GoUnusedProtection__
var _ = includes.GoUnusedProtection__
// (needed to ensure safety because of naive import list construction)
var _ = fmt.Printf
var _ = strings.Split
var _ = thrift.ZERO


type IncludesIncluded = includes.Included

func NewIncludesIncluded() *IncludesIncluded {
    return includes.NewIncluded()
}

func WriteIncludesIncluded(item *IncludesIncluded, p thrift.Format) error {
    if err := item.Write(p); err != nil {
    return err
}
    return nil
}

func ReadIncludesIncluded(p thrift.Format) (IncludesIncluded, error) {
    var decodeResult IncludesIncluded
    decodeErr := func() error {
        result := *includes.NewIncluded()
err := result.Read(p)
if err != nil {
    return err
}
        decodeResult = result
        return nil
    }()
    return decodeResult, decodeErr
}

type IncludesTransitiveFoo = includes.TransitiveFoo

func NewIncludesTransitiveFoo() *IncludesTransitiveFoo {
    return includes.NewTransitiveFoo()
}

func WriteIncludesTransitiveFoo(item *IncludesTransitiveFoo, p thrift.Format) error {
    err := includes.WriteTransitiveFoo(item, p)
if err != nil {
    return err
}
    return nil
}

func ReadIncludesTransitiveFoo(p thrift.Format) (IncludesTransitiveFoo, error) {
    var decodeResult IncludesTransitiveFoo
    decodeErr := func() error {
        result, err := includes.ReadTransitiveFoo(p)
if err != nil {
    return err
}
        decodeResult = result
        return nil
    }()
    return decodeResult, decodeErr
}

