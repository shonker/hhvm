#
# Autogenerated by Thrift for thrift/lib/thrift/patch.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from libc.stdint cimport (
    int8_t as cint8_t,
    int16_t as cint16_t,
    int32_t as cint32_t,
    int64_t as cint64_t,
    uint16_t as cuint16_t,
    uint32_t as cuint32_t,
)
from libcpp.string cimport string
from libcpp cimport bool as cbool, nullptr, nullptr_t
from cpython cimport bool as pbool
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap, pair as cpair
from libcpp.unordered_map cimport unordered_map as cumap
cimport folly.iobuf as _fbthrift_iobuf
from thrift.python.exceptions cimport cTException
from thrift.py3.types cimport (
    bstring,
    field_ref as __field_ref,
    optional_field_ref as __optional_field_ref,
    required_field_ref as __required_field_ref,
    terse_field_ref as __terse_field_ref,
    union_field_ref as __union_field_ref,
    get_union_field_value as __get_union_field_value,
)
from thrift.python.common cimport cThriftMetadata as __fbthrift_cThriftMetadata
cimport apache.thrift.type.id.types as _apache_thrift_type_id_types
cimport apache.thrift.type.standard.types as _apache_thrift_type_standard_types
cimport thrift.py3.exceptions
cimport thrift.py3.types
from thrift.python.common cimport (
    RpcOptions as __RpcOptions,
    MetadataBox as __MetadataBox,
)
from folly.optional cimport cOptional as __cOptional

cimport apache.thrift.op.patch.types_fields as _fbthrift_types_fields

cdef extern from "thrift/compiler/test/fixtures/patch/gen-py3/patch/types.h":
  pass

cdef extern from "thrift/lib/cpp2/op/detail/Patch.h":
  pass




cdef extern from "thrift/compiler/test/fixtures/patch/gen-cpp2/patch_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass ExceptionMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "thrift/compiler/test/fixtures/patch/gen-cpp2/patch_metadata.h" namespace "apache::thrift::detail::md":
    cdef cppclass StructMetadata[T]:
        @staticmethod
        void gen(__fbthrift_cThriftMetadata &metadata)
cdef extern from "thrift/compiler/test/fixtures/patch/gen-cpp2/patch_types_custom_protocol.h" namespace "::apache::thrift::op":

    cdef cppclass cGeneratePatch "::apache::thrift::op::GeneratePatch":
        cGeneratePatch() except +
        cGeneratePatch(const cGeneratePatch&) except +
        bint operator==(cGeneratePatch&)
        bint operator!=(cGeneratePatch&)
        bint operator<(cGeneratePatch&)
        bint operator>(cGeneratePatch&)
        bint operator<=(cGeneratePatch&)
        bint operator>=(cGeneratePatch&)


    cdef cppclass cGeneratePatchNew "::apache::thrift::op::GeneratePatchNew":
        cGeneratePatchNew() except +
        cGeneratePatchNew(const cGeneratePatchNew&) except +
        bint operator==(cGeneratePatchNew&)
        bint operator!=(cGeneratePatchNew&)
        bint operator<(cGeneratePatchNew&)
        bint operator>(cGeneratePatchNew&)
        bint operator<=(cGeneratePatchNew&)
        bint operator>=(cGeneratePatchNew&)


    cdef cppclass cAssignOnlyPatch "::apache::thrift::op::AssignOnlyPatch":
        cAssignOnlyPatch() except +
        cAssignOnlyPatch(const cAssignOnlyPatch&) except +
        bint operator==(cAssignOnlyPatch&)
        bint operator!=(cAssignOnlyPatch&)
        bint operator<(cAssignOnlyPatch&)
        bint operator>(cAssignOnlyPatch&)
        bint operator<=(cAssignOnlyPatch&)
        bint operator>=(cAssignOnlyPatch&)




cdef class GeneratePatch(thrift.py3.types.Struct):
    cdef shared_ptr[cGeneratePatch] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__GeneratePatch_FieldsSetter _fields_setter

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[cGeneratePatch])



cdef class GeneratePatchNew(thrift.py3.types.Struct):
    cdef shared_ptr[cGeneratePatchNew] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__GeneratePatchNew_FieldsSetter _fields_setter

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[cGeneratePatchNew])



cdef class AssignOnlyPatch(thrift.py3.types.Struct):
    cdef shared_ptr[cAssignOnlyPatch] _cpp_obj_FBTHRIFT_ONLY_DO_NOT_USE
    cdef _fbthrift_types_fields.__AssignOnlyPatch_FieldsSetter _fields_setter

    @staticmethod
    cdef _create_FBTHRIFT_ONLY_DO_NOT_USE(shared_ptr[cAssignOnlyPatch])



