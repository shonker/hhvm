#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/patch/src/module.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#


import folly.iobuf as _fbthrift_iobuf

from thrift.py3.reflection import (
    NumberType as __NumberType,
    StructType as __StructType,
    Qualifier as __Qualifier,
    StructSpec as __StructSpec,
    ListSpec as __ListSpec,
    SetSpec as __SetSpec,
    MapSpec as __MapSpec,
    FieldSpec as __FieldSpec,
)

import apache.thrift.op.patch.types as _apache_thrift_op_patch_types
import apache.thrift.type.standard.types as _apache_thrift_type_standard_types

import test.fixtures.patch.module.types as _test_fixtures_patch_module_types



def get_reflection__MyData() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="MyData",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="data1",
            py_name="data1",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=2,
            name="data2",
            py_name="data2",
            type=int,
            kind=__NumberType.I32,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__MyDataWithCustomDefault() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="MyDataWithCustomDefault",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    defaults = _test_fixtures_patch_module_types.MyDataWithCustomDefault()
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="data1",
            py_name="data1",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=defaults.data1,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=2,
            name="data2",
            py_name="data2",
            type=int,
            kind=__NumberType.I32,
            qualifier=__Qualifier.UNQUALIFIED,
            default=defaults.data2,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__InnerUnion() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="InnerUnion",
        kind=__StructType.UNION,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="innerOption",
            py_name="innerOption",
            type=bytes,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__MyUnion() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="MyUnion",
        kind=__StructType.UNION,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="option1",
            py_name="option1",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=2,
            name="option2",
            py_name="option2",
            type=int,
            kind=__NumberType.I32,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=3,
            name="option3",
            py_name="option3",
            type=_test_fixtures_patch_module_types.InnerUnion,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__MyStruct() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="MyStruct",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    defaults = _test_fixtures_patch_module_types.MyStruct()
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-1,
            name="boolVal",
            py_name="boolVal",
            type=bool,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-2,
            name="byteVal",
            py_name="byteVal",
            type=int,
            kind=__NumberType.BYTE,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-3,
            name="i16Val",
            py_name="i16Val",
            type=int,
            kind=__NumberType.I16,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-4,
            name="i32Val",
            py_name="i32Val",
            type=int,
            kind=__NumberType.I32,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-5,
            name="i64Val",
            py_name="i64Val",
            type=int,
            kind=__NumberType.I64,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-6,
            name="floatVal",
            py_name="floatVal",
            type=float,
            kind=__NumberType.FLOAT,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-7,
            name="doubleVal",
            py_name="doubleVal",
            type=float,
            kind=__NumberType.DOUBLE,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-8,
            name="stringVal",
            py_name="stringVal",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-9,
            name="binaryVal",
            py_name="binaryVal",
            type=_fbthrift_iobuf.IOBuf,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-10,
            name="enumVal",
            py_name="enumVal",
            type=_test_fixtures_patch_module_types.MyEnum,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-11,
            name="structVal",
            py_name="structVal",
            type=_test_fixtures_patch_module_types.MyData,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-12,
            name="unionVal",
            py_name="unionVal",
            type=_test_fixtures_patch_module_types.MyUnion,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-13,
            name="lateStructVal",
            py_name="lateStructVal",
            type=_test_fixtures_patch_module_types.LateDefStruct,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-14,
            name="optBoolVal",
            py_name="optBoolVal",
            type=bool,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-15,
            name="optByteVal",
            py_name="optByteVal",
            type=int,
            kind=__NumberType.BYTE,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-16,
            name="optI16Val",
            py_name="optI16Val",
            type=int,
            kind=__NumberType.I16,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-17,
            name="optI32Val",
            py_name="optI32Val",
            type=int,
            kind=__NumberType.I32,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-18,
            name="optI64Val",
            py_name="optI64Val",
            type=int,
            kind=__NumberType.I64,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-19,
            name="optFloatVal",
            py_name="optFloatVal",
            type=float,
            kind=__NumberType.FLOAT,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-20,
            name="optDoubleVal",
            py_name="optDoubleVal",
            type=float,
            kind=__NumberType.DOUBLE,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-21,
            name="optStringVal",
            py_name="optStringVal",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-22,
            name="optBinaryVal",
            py_name="optBinaryVal",
            type=_fbthrift_iobuf.IOBuf,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-23,
            name="optEnumVal",
            py_name="optEnumVal",
            type=_test_fixtures_patch_module_types.MyEnum,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-24,
            name="optStructVal",
            py_name="optStructVal",
            type=_test_fixtures_patch_module_types.MyData,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-25,
            name="optLateStructVal",
            py_name="optLateStructVal",
            type=_test_fixtures_patch_module_types.LateDefStruct,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-26,
            name="optListVal",
            py_name="optListVal",
            type=_test_fixtures_patch_module_types.List__i16,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-27,
            name="optSetVal",
            py_name="optSetVal",
            type=_test_fixtures_patch_module_types.Set__string,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-28,
            name="optMapVal",
            py_name="optMapVal",
            type=_test_fixtures_patch_module_types.Map__string_string,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-29,
            name="listMap",
            py_name="listMap",
            type=_test_fixtures_patch_module_types.List__Map__string_i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-30,
            name="mapMap",
            py_name="mapMap",
            type=_test_fixtures_patch_module_types.Map__string_Map__string_i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-31,
            name="i32WithCustomDefault",
            py_name="i32WithCustomDefault",
            type=int,
            kind=__NumberType.I32,
            qualifier=__Qualifier.UNQUALIFIED,
            default=defaults.i32WithCustomDefault,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-32,
            name="structWithCustomDefault",
            py_name="structWithCustomDefault",
            type=_test_fixtures_patch_module_types.MyDataWithCustomDefault,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="structWithFieldCustomDefault",
            py_name="structWithFieldCustomDefault",
            type=_test_fixtures_patch_module_types.MyData,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=defaults.structWithFieldCustomDefault,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__LateDefStruct() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="LateDefStruct",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    return spec
def get_reflection__Recursive() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="Recursive",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-1,
            name="nodes",
            py_name="nodes",
            type=_test_fixtures_patch_module_types.Map__string_Recursive,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__Bar() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="Bar",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-1,
            name="loop",
            py_name="loop",
            type=_test_fixtures_patch_module_types.Loop,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__Loop() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="Loop",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=-1,
            name="bar",
            py_name="bar",
            type=_test_fixtures_patch_module_types.Bar,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__RefFields() -> __StructSpec:
    spec: __StructSpec = __StructSpec._fbthrift_create(
        name="RefFields",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=1,
            name="unique",
            py_name="unique",
            type=_test_fixtures_patch_module_types.List__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=2,
            name="shared_const",
            py_name="shared_const",
            type=_test_fixtures_patch_module_types.List__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=3,
            name="shared_mustable",
            py_name="shared_mustable",
            type=_test_fixtures_patch_module_types.List__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=4,
            name="opt_unique",
            py_name="opt_unique",
            type=_test_fixtures_patch_module_types.List__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=5,
            name="opt_shared_const",
            py_name="opt_shared_const",
            type=_test_fixtures_patch_module_types.List__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=6,
            name="opt_shared_mustable",
            py_name="opt_shared_mustable",
            type=_test_fixtures_patch_module_types.List__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec._fbthrift_create(
            id=7,
            name="opt_box",
            py_name="opt_box",
            type=_test_fixtures_patch_module_types.List__i32,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.OPTIONAL,
            default=None,
            annotations={
            },
        ),
    )
    return spec
def get_reflection__List__i16() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=int,
        kind=__NumberType.I16,
    )

def get_reflection__Set__string() -> __SetSpec:
    return __SetSpec._fbthrift_create(
        value=str,
        kind=__NumberType.NOT_A_NUMBER,
     )

def get_reflection__Map__string_string() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=str,
        value_kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__Map__string_i32() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=int,
        value_kind=__NumberType.I32,
    )

def get_reflection__List__Map__string_i32() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=_test_fixtures_patch_module_types.Map__string_i32,
        kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__Map__string_Map__string_i32() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=_test_fixtures_patch_module_types.Map__string_i32,
        value_kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__Map__string_Recursive() -> __MapSpec:
    return __MapSpec._fbthrift_create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=_test_fixtures_patch_module_types.Recursive,
        value_kind=__NumberType.NOT_A_NUMBER,
    )

def get_reflection__List__i32() -> __ListSpec :
    return __ListSpec._fbthrift_create(
        value=int,
        kind=__NumberType.I32,
    )

