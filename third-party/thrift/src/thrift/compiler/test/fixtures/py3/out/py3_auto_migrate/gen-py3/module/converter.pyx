
#
# Autogenerated by Thrift for thrift/compiler/test/fixtures/py3/src/module.thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from libcpp.memory cimport make_shared
from thrift.python.capi.cpp_converter cimport cpp_to_python, python_to_cpp
from cython.operator cimport dereference as deref

cdef extern from "thrift/compiler/test/fixtures/py3/gen-python-capi/module/thrift_types_capi.h":
    pass

cdef shared_ptr[_fbthrift_ctypes.cSimpleException] SimpleException_convert_to_cpp(object inst) except*:
    return make_shared[_fbthrift_ctypes.cSimpleException](python_to_cpp[_fbthrift_ctypes.cSimpleException](inst))


cdef object SimpleException_from_cpp(const shared_ptr[_fbthrift_ctypes.cSimpleException]& c_struct):
    return cpp_to_python[_fbthrift_ctypes.cSimpleException](deref(c_struct))
cdef shared_ptr[_fbthrift_ctypes.cOptionalRefStruct] OptionalRefStruct_convert_to_cpp(object inst) except*:
    return make_shared[_fbthrift_ctypes.cOptionalRefStruct](python_to_cpp[_fbthrift_ctypes.cOptionalRefStruct](inst))


cdef object OptionalRefStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cOptionalRefStruct]& c_struct):
    return cpp_to_python[_fbthrift_ctypes.cOptionalRefStruct](deref(c_struct))
cdef shared_ptr[_fbthrift_ctypes.cSimpleStruct] SimpleStruct_convert_to_cpp(object inst) except*:
    return make_shared[_fbthrift_ctypes.cSimpleStruct](python_to_cpp[_fbthrift_ctypes.cSimpleStruct](inst))


cdef object SimpleStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cSimpleStruct]& c_struct):
    return cpp_to_python[_fbthrift_ctypes.cSimpleStruct](deref(c_struct))
cdef shared_ptr[_fbthrift_ctypes.cHiddenTypeFieldsStruct] HiddenTypeFieldsStruct_convert_to_cpp(object inst) except*:
    return make_shared[_fbthrift_ctypes.cHiddenTypeFieldsStruct](python_to_cpp[_fbthrift_ctypes.cHiddenTypeFieldsStruct](inst))


cdef object HiddenTypeFieldsStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cHiddenTypeFieldsStruct]& c_struct):
    return cpp_to_python[_fbthrift_ctypes.cHiddenTypeFieldsStruct](deref(c_struct))
cdef shared_ptr[_fbthrift_ctypes.cComplexStruct] ComplexStruct_convert_to_cpp(object inst) except*:
    return make_shared[_fbthrift_ctypes.cComplexStruct](python_to_cpp[_fbthrift_ctypes.cComplexStruct](inst))


cdef object ComplexStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cComplexStruct]& c_struct):
    return cpp_to_python[_fbthrift_ctypes.cComplexStruct](deref(c_struct))
cdef shared_ptr[_fbthrift_ctypes.cBinaryUnion] BinaryUnion_convert_to_cpp(object inst) except*:
    return make_shared[_fbthrift_ctypes.cBinaryUnion](python_to_cpp[_fbthrift_ctypes.cBinaryUnion](inst))


cdef object BinaryUnion_from_cpp(const shared_ptr[_fbthrift_ctypes.cBinaryUnion]& c_struct):
    return cpp_to_python[_fbthrift_ctypes.cBinaryUnion](deref(c_struct))
cdef shared_ptr[_fbthrift_ctypes.cBinaryUnionStruct] BinaryUnionStruct_convert_to_cpp(object inst) except*:
    return make_shared[_fbthrift_ctypes.cBinaryUnionStruct](python_to_cpp[_fbthrift_ctypes.cBinaryUnionStruct](inst))


cdef object BinaryUnionStruct_from_cpp(const shared_ptr[_fbthrift_ctypes.cBinaryUnionStruct]& c_struct):
    return cpp_to_python[_fbthrift_ctypes.cBinaryUnionStruct](deref(c_struct))
